<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YHHBlog</title>
  
  <subtitle>断剑重铸之日，其势归来之时</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://youhanghang.com/"/>
  <updated>2017-10-15T07:26:26.000Z</updated>
  <id>http://youhanghang.com/</id>
  
  <author>
    <name>游来游去</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>js表单验证大全</title>
    <link href="http://youhanghang.com/2018/10/29/%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81/"/>
    <id>http://youhanghang.com/2018/10/29/表单验证/</id>
    <published>2018-10-29T09:00:13.170Z</published>
    <updated>2017-10-15T07:26:26.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="js表单验证大全"><a href="#js表单验证大全" class="headerlink" title="js表单验证大全"></a><a href="https://www.baidu.com/s?wd=js表单验证大全" target="_blank" rel="noopener">js表单验证大全</a></h2><h3 id="表单验证"><a href="#表单验证" class="headerlink" title="表单验证"></a>表单验证</h3><figure class="highlight javascript"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">// 用途：校验ip地址的格式 </span></span><br><span class="line"><span class="comment">// 输入：strIP：ip地址 </span></span><br><span class="line"><span class="comment">// 返回：如果通过验证返回true,否则返回false； </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isIP</span>(<span class="params">strIP</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (isNull(strIP)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">var</span> re = <span class="regexp">/^(\d+)\.(\d+)\.(\d+)\.(\d+)$/g</span> <span class="comment">//匹配IP地址的正则表达式 </span></span><br><span class="line">    <span class="keyword">if</span> (re.test(strIP)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">RegExp</span>.$<span class="number">1</span> &lt; <span class="number">256</span> &amp;&amp; <span class="built_in">RegExp</span>.$<span class="number">2</span> &lt; <span class="number">256</span> &amp;&amp; <span class="built_in">RegExp</span>.$<span class="number">3</span> &lt; <span class="number">256</span> &amp;&amp; <span class="built_in">RegExp</span>.$<span class="number">4</span> &lt; <span class="number">256</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">用途：检查输入字符串是否为空或者全部都是空格 </span></span><br><span class="line"><span class="comment">输入：str </span></span><br><span class="line"><span class="comment">返回： </span></span><br><span class="line"><span class="comment">如果全是空返回true,否则返回false </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isNull</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (str == <span class="string">""</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">var</span> regu = <span class="string">"^[ ]+$"</span>;</span><br><span class="line">    <span class="keyword">var</span> re = <span class="keyword">new</span> <span class="built_in">RegExp</span>(regu);</span><br><span class="line">    <span class="keyword">return</span> re.test(str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">用途：检查输入对象的值是否符合整数格式 </span></span><br><span class="line"><span class="comment">输入：str 输入的字符串 </span></span><br><span class="line"><span class="comment">返回：如果通过验证返回true,否则返回false </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isInteger</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> regu = <span class="regexp">/^[-]&#123;0,1&#125;[0-9]&#123;1,&#125;$/</span>;</span><br><span class="line">    <span class="keyword">return</span> regu.test(str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">用途：检查输入手机号码是否正确 </span></span><br><span class="line"><span class="comment">输入： </span></span><br><span class="line"><span class="comment">s：字符串 </span></span><br><span class="line"><span class="comment">返回： </span></span><br><span class="line"><span class="comment">如果通过验证返回true,否则返回false </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkMobile</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> regu = <span class="regexp">/^[1][3][0-9]&#123;9&#125;$/</span>;</span><br><span class="line">    <span class="keyword">var</span> re = <span class="keyword">new</span> <span class="built_in">RegExp</span>(regu);</span><br><span class="line">    <span class="keyword">if</span> (re.test(s)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">用途：检查输入字符串是否符合正整数格式 </span></span><br><span class="line"><span class="comment">输入： </span></span><br><span class="line"><span class="comment">s：字符串 </span></span><br><span class="line"><span class="comment">返回： </span></span><br><span class="line"><span class="comment">如果通过验证返回true,否则返回false </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isNumber</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> regu = <span class="string">"^[0-9]+$"</span>;</span><br><span class="line">    <span class="keyword">var</span> re = <span class="keyword">new</span> <span class="built_in">RegExp</span>(regu);</span><br><span class="line">    <span class="keyword">if</span> (s.search(re) != <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">用途：检查输入字符串是否是带小数的数字格式,可以是负数 </span></span><br><span class="line"><span class="comment">输入： </span></span><br><span class="line"><span class="comment">s：字符串 </span></span><br><span class="line"><span class="comment">返回： </span></span><br><span class="line"><span class="comment">如果通过验证返回true,否则返回false </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isDecimal</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (isInteger(str)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">var</span> re = <span class="regexp">/^[-]&#123;0,1&#125;(\d+)[\.]+(\d+)$/</span>;</span><br><span class="line">    <span class="keyword">if</span> (re.test(str)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">RegExp</span>.$<span class="number">1</span> == <span class="number">0</span> &amp;&amp; <span class="built_in">RegExp</span>.$<span class="number">2</span> == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">用途：检查输入对象的值是否符合端口号格式 </span></span><br><span class="line"><span class="comment">输入：str 输入的字符串 </span></span><br><span class="line"><span class="comment">返回：如果通过验证返回true,否则返回false </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isPort</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (isNumber(str) &amp;&amp; str &lt; <span class="number">65536</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">用途：检查输入对象的值是否符合E-Mail格式 </span></span><br><span class="line"><span class="comment">输入：str 输入的字符串 </span></span><br><span class="line"><span class="comment">返回：如果通过验证返回true,否则返回false </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isEmail</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> myReg = <span class="regexp">/^[-_A-Za-z0-9]+@([_A-Za-z0-9]+\.)+[A-Za-z0-9]&#123;2,3&#125;$/</span>;</span><br><span class="line">    <span class="keyword">if</span> (myReg.test(str)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">用途：检查输入字符串是否符合金额格式 </span></span><br><span class="line"><span class="comment">格式定义为带小数的正数，小数点后最多三位 </span></span><br><span class="line"><span class="comment">输入： </span></span><br><span class="line"><span class="comment">s：字符串 </span></span><br><span class="line"><span class="comment">返回： </span></span><br><span class="line"><span class="comment">如果通过验证返回true,否则返回false </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isMoney</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> regu = <span class="string">"^[0-9]+[\.][0-9]&#123;0,3&#125;$"</span>;</span><br><span class="line">    <span class="keyword">var</span> re = <span class="keyword">new</span> <span class="built_in">RegExp</span>(regu);</span><br><span class="line">    <span class="keyword">if</span> (re.test(s)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">用途：检查输入字符串是否只由英文字母和数字和下划线组成 </span></span><br><span class="line"><span class="comment">输入： </span></span><br><span class="line"><span class="comment">s：字符串 </span></span><br><span class="line"><span class="comment">返回： </span></span><br><span class="line"><span class="comment">如果通过验证返回true,否则返回false </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isNumberOr_Letter</span>(<span class="params">s</span>) </span>&#123; <span class="comment">//判断是否是数字或字母 </span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> regu = <span class="string">"^[0-9a-zA-Z\_]+$"</span>;</span><br><span class="line">    <span class="keyword">var</span> re = <span class="keyword">new</span> <span class="built_in">RegExp</span>(regu);</span><br><span class="line">    <span class="keyword">if</span> (re.test(s)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">用途：检查输入字符串是否只由英文字母和数字组成 </span></span><br><span class="line"><span class="comment">输入： </span></span><br><span class="line"><span class="comment">s：字符串 </span></span><br><span class="line"><span class="comment">返回： </span></span><br><span class="line"><span class="comment">如果通过验证返回true,否则返回false </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isNumberOrLetter</span>(<span class="params">s</span>) </span>&#123; <span class="comment">//判断是否是数字或字母 </span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> regu = <span class="string">"^[0-9a-zA-Z]+$"</span>;</span><br><span class="line">    <span class="keyword">var</span> re = <span class="keyword">new</span> <span class="built_in">RegExp</span>(regu);</span><br><span class="line">    <span class="keyword">if</span> (re.test(s)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">用途：检查输入字符串是否只由汉字、字母、数字组成 </span></span><br><span class="line"><span class="comment">输入： </span></span><br><span class="line"><span class="comment">value：字符串 </span></span><br><span class="line"><span class="comment">返回： </span></span><br><span class="line"><span class="comment">如果通过验证返回true,否则返回false </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isChinaOrNumbOrLett</span>(<span class="params">s</span>) </span>&#123; <span class="comment">//判断是否是汉字、字母、数字组成 </span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> regu = <span class="string">"^[0-9a-zA-Z\u4e00-\u9fa5]+$"</span>;</span><br><span class="line">    <span class="keyword">var</span> re = <span class="keyword">new</span> <span class="built_in">RegExp</span>(regu);</span><br><span class="line">    <span class="keyword">if</span> (re.test(s)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">用途：判断是否是日期 </span></span><br><span class="line"><span class="comment">输入：date：日期；fmt：日期格式 </span></span><br><span class="line"><span class="comment">返回：如果通过验证返回true,否则返回false </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isDate</span>(<span class="params">date, fmt</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (fmt == <span class="literal">null</span>) fmt = <span class="string">"yyyyMMdd"</span>;</span><br><span class="line">    <span class="keyword">var</span> yIndex = fmt.indexOf(<span class="string">"yyyy"</span>);</span><br><span class="line">    <span class="keyword">if</span> (yIndex == <span class="number">-1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">var</span> year = date.substring(yIndex, yIndex + <span class="number">4</span>);</span><br><span class="line">    <span class="keyword">var</span> mIndex = fmt.indexOf(<span class="string">"MM"</span>);</span><br><span class="line">    <span class="keyword">if</span> (mIndex == <span class="number">-1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">var</span> month = date.substring(mIndex, mIndex + <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">var</span> dIndex = fmt.indexOf(<span class="string">"dd"</span>);</span><br><span class="line">    <span class="keyword">if</span> (dIndex == <span class="number">-1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">var</span> day = date.substring(dIndex, dIndex + <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span> (!isNumber(year) || year &gt; <span class="string">"2100"</span> || year &lt; <span class="string">"1900"</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (!isNumber(month) || month &gt; <span class="string">"12"</span> || month &lt; <span class="string">"01"</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (day &gt; getMaxDay(year, month) || day &lt; <span class="string">"01"</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getMaxDay</span>(<span class="params">year, month</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (month == <span class="number">4</span> || month == <span class="number">6</span> || month == <span class="number">9</span> || month == <span class="number">11</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"30"</span>;</span><br><span class="line">    <span class="keyword">if</span> (month == <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">if</span> (year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span> || year % <span class="number">400</span> == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"29"</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">"28"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"31"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">用途：字符1是否以字符串2结束 </span></span><br><span class="line"><span class="comment">输入：str1：字符串；str2：被包含的字符串 </span></span><br><span class="line"><span class="comment">返回：如果通过验证返回true,否则返回false </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isLastMatch</span>(<span class="params">str1, str2</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> index = str1.lastIndexOf(str2);</span><br><span class="line">    <span class="keyword">if</span> (str1.length == index + str2.length) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">用途：字符1是否以字符串2开始 </span></span><br><span class="line"><span class="comment">输入：str1：字符串；str2：被包含的字符串 </span></span><br><span class="line"><span class="comment">返回：如果通过验证返回true,否则返回false </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isFirstMatch</span>(<span class="params">str1, str2</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> index = str1.indexOf(str2);</span><br><span class="line">    <span class="keyword">if</span> (index == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">用途：字符1是包含字符串2 </span></span><br><span class="line"><span class="comment">输入：str1：字符串；str2：被包含的字符串 </span></span><br><span class="line"><span class="comment">返回：如果通过验证返回true,否则返回false </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isMatch</span>(<span class="params">str1, str2</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> index = str1.indexOf(str2);</span><br><span class="line">    <span class="keyword">if</span> (index == <span class="number">-1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">用途：检查输入的起止日期是否正确，规则为两个日期的格式正确， </span></span><br><span class="line"><span class="comment">且结束如期&gt;=起始日期 </span></span><br><span class="line"><span class="comment">输入： </span></span><br><span class="line"><span class="comment">startDate：起始日期，字符串 </span></span><br><span class="line"><span class="comment">endDate：结束如期，字符串 </span></span><br><span class="line"><span class="comment">返回： </span></span><br><span class="line"><span class="comment">如果通过验证返回true,否则返回false </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkTwoDate</span>(<span class="params">startDate, endDate</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!isDate(startDate)) &#123;</span><br><span class="line">        alert(<span class="string">"起始日期不正确!"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!isDate(endDate)) &#123;</span><br><span class="line">        alert(<span class="string">"终止日期不正确!"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (startDate &gt; endDate) &#123;</span><br><span class="line">        alert(<span class="string">"起始日期不能大于终止日期!"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">用途：检查输入的Email信箱格式是否正确 </span></span><br><span class="line"><span class="comment">输入： </span></span><br><span class="line"><span class="comment">strEmail：字符串 </span></span><br><span class="line"><span class="comment">返回： </span></span><br><span class="line"><span class="comment">如果通过验证返回true,否则返回false </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkEmail</span>(<span class="params">strEmail</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//var emailReg = /^[_a-z0-9]+@([_a-z0-9]+\.)+[a-z0-9]&#123;2,3&#125;$/; </span></span><br><span class="line">    <span class="keyword">var</span> emailReg = <span class="regexp">/^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$/</span>;</span><br><span class="line">    <span class="keyword">if</span> (emailReg.test(strEmail)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        alert(<span class="string">"您输入的Email地址格式不正确！"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">用途：检查输入的电话号码格式是否正确 </span></span><br><span class="line"><span class="comment">输入： </span></span><br><span class="line"><span class="comment">strPhone：字符串 </span></span><br><span class="line"><span class="comment">返回： </span></span><br><span class="line"><span class="comment">如果通过验证返回true,否则返回false </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkPhone</span>(<span class="params">strPhone</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> phoneRegWithArea = <span class="regexp">/^[0][1-9]&#123;2,3&#125;-[0-9]&#123;5,10&#125;$/</span>;</span><br><span class="line">    <span class="keyword">var</span> phoneRegNoArea = <span class="regexp">/^[1-9]&#123;1&#125;[0-9]&#123;5,8&#125;$/</span>;</span><br><span class="line">    <span class="keyword">var</span> prompt = <span class="string">"您输入的电话号码不正确!"</span></span><br><span class="line">    <span class="keyword">if</span> (strPhone.length &gt; <span class="number">9</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (phoneRegWithArea.test(strPhone)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            alert(prompt);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (phoneRegNoArea.test(strPhone)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            alert(prompt);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">用途：检查复选框被选中的数目 </span></span><br><span class="line"><span class="comment">输入： </span></span><br><span class="line"><span class="comment">checkboxID：字符串 </span></span><br><span class="line"><span class="comment">返回： </span></span><br><span class="line"><span class="comment">返回该复选框中被选中的数目 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkSelect</span>(<span class="params">checkboxID</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> check = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.all(checkboxID).length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">document</span>.all(checkboxID).length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">document</span>.all(checkboxID).item(i).checked) &#123;</span><br><span class="line">                check += <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">document</span>.all(checkboxID).checked)</span><br><span class="line">            check = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> check;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getTotalBytes</span>(<span class="params">varField</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (varField == <span class="literal">null</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> totalCount = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; varField.value.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (varField.value.charCodeAt(i) &gt; <span class="number">127</span>)</span><br><span class="line">            totalCount += <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            totalCount++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> totalCount;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFirstSelectedValue</span>(<span class="params">checkboxID</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> value = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.all(checkboxID).length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">document</span>.all(checkboxID).length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">document</span>.all(checkboxID).item(i).checked) &#123;</span><br><span class="line">                value = <span class="built_in">document</span>.all(checkboxID).item(i).value;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">document</span>.all(checkboxID).checked)</span><br><span class="line">            value = <span class="built_in">document</span>.all(checkboxID).value;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFirstSelectedIndex</span>(<span class="params">checkboxID</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> value = <span class="number">-2</span>;</span><br><span class="line">    <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.all(checkboxID).length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">document</span>.all(checkboxID).length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">document</span>.all(checkboxID).item(i).checked) &#123;</span><br><span class="line">                value = i;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">document</span>.all(checkboxID).checked)</span><br><span class="line">            value = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">selectAll</span>(<span class="params">checkboxID, status</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.all(checkboxID) == <span class="literal">null</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.all(checkboxID).length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">document</span>.all(checkboxID).length; i++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">document</span>.all(checkboxID).item(i).checked = status;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">document</span>.all(checkboxID).checked = status;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">selectInverse</span>(<span class="params">checkboxID</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.all(checkboxID) == <span class="literal">null</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.all(checkboxID).length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">document</span>.all(checkboxID).length; i++) &#123;</span><br><span class="line">            <span class="built_in">document</span>.all(checkboxID).item(i).checked = !<span class="built_in">document</span>.all(checkboxID).item(i).checked;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">document</span>.all(checkboxID).checked = !<span class="built_in">document</span>.all(checkboxID).checked;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkDate</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (value == <span class="string">''</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (value.length != <span class="number">8</span> || !isNumber(value)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">var</span> year = value.substring(<span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">    <span class="keyword">if</span> (year &gt; <span class="string">"2100"</span> || year &lt; <span class="string">"1900"</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> month = value.substring(<span class="number">4</span>, <span class="number">6</span>);</span><br><span class="line">    <span class="keyword">if</span> (month &gt; <span class="string">"12"</span> || month &lt; <span class="string">"01"</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> day = value.substring(<span class="number">6</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span> (day &gt; getMaxDay(year, month) || day &lt; <span class="string">"01"</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">用途：检查输入的起止日期是否正确，规则为两个日期的格式正确或都为空 </span></span><br><span class="line"><span class="comment">且结束日期&gt;=起始日期 </span></span><br><span class="line"><span class="comment">输入： </span></span><br><span class="line"><span class="comment">startDate：起始日期，字符串 </span></span><br><span class="line"><span class="comment">endDate：  结束日期，字符串 </span></span><br><span class="line"><span class="comment">返回： </span></span><br><span class="line"><span class="comment">如果通过验证返回true,否则返回false </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkPeriod</span>(<span class="params">startDate, endDate</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!checkDate(startDate)) &#123;</span><br><span class="line">        alert(<span class="string">"起始日期不正确!"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!checkDate(endDate)) &#123;</span><br><span class="line">        alert(<span class="string">"终止日期不正确!"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (startDate &gt; endDate) &#123;</span><br><span class="line">        alert(<span class="string">"起始日期不能大于终止日期!"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">用途：检查证券代码是否正确 </span></span><br><span class="line"><span class="comment">输入： </span></span><br><span class="line"><span class="comment">secCode:证券代码 </span></span><br><span class="line"><span class="comment">返回： </span></span><br><span class="line"><span class="comment">如果通过验证返回true,否则返回false </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkSecCode</span>(<span class="params">secCode</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (secCode.length != <span class="number">6</span>) &#123;</span><br><span class="line">        alert(<span class="string">"证券代码长度应该为6位"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!isNumber(secCode)) &#123;</span><br><span class="line">        alert(<span class="string">"证券代码只能包含数字"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**************************************************** </span></span><br><span class="line"><span class="comment">function:cTrim(sInputString,iType) </span></span><br><span class="line"><span class="comment">description:字符串去空格的函数 </span></span><br><span class="line"><span class="comment">parameters:iType：1=去掉字符串左边的空格 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2=去掉字符串左边的空格 </span></span><br><span class="line"><span class="comment">0=去掉字符串左边和右边的空格 </span></span><br><span class="line"><span class="comment">return value:去掉空格的字符串 </span></span><br><span class="line"><span class="comment">****************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cTrim</span>(<span class="params">sInputString, iType</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> sTmpStr = <span class="string">' '</span>;</span><br><span class="line">    <span class="keyword">var</span> i = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (iType == <span class="number">0</span> || iType == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">while</span> (sTmpStr == <span class="string">' '</span>) &#123;</span><br><span class="line">            ++i;</span><br><span class="line">            sTmpStr = sInputString.substr(i, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        sInputString = sInputString.substring(i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (iType == <span class="number">0</span> || iType == <span class="number">2</span>) &#123;</span><br><span class="line">        sTmpStr = <span class="string">' '</span>;</span><br><span class="line">        i = sInputString.length;</span><br><span class="line">        <span class="keyword">while</span> (sTmpStr == <span class="string">' '</span>) &#123;</span><br><span class="line">            --i;</span><br><span class="line">            sTmpStr = sInputString.substr(i, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        sInputString = sInputString.substring(<span class="number">0</span>, i + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sInputString;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//身份证验证</span></span><br><span class="line"><span class="keyword">var</span> Wi = [<span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>];    <span class="comment">// 加权因子   </span></span><br><span class="line"><span class="keyword">var</span> ValideCode = [<span class="number">1</span>, <span class="number">0</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>];            <span class="comment">// 身份证验证位值.10代表X   </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">IdCardValidate</span>(<span class="params">idCard</span>) </span>&#123;</span><br><span class="line">idCard = trim(idCard.replace(<span class="regexp">/ /g</span>, <span class="string">""</span>));               <span class="comment">//去掉字符串头尾空格                     </span></span><br><span class="line"><span class="keyword">if</span> (idCard.length == <span class="number">15</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> isValidityBrithBy15IdCard(idCard);       <span class="comment">//进行15位身份证的验证    </span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (idCard.length == <span class="number">18</span>) &#123;</span><br><span class="line"><span class="keyword">var</span> a_idCard = idCard.split(<span class="string">""</span>);                <span class="comment">// 得到身份证数组   </span></span><br><span class="line"><span class="keyword">if</span> (isValidityBrithBy18IdCard(idCard) &amp;&amp; isTrueValidateCodeBy18IdCard(a_idCard)) &#123;   <span class="comment">//进行18位身份证的基本验证和第18位的验证</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**  </span></span><br><span class="line"><span class="comment"> * 判断身份证号码为18位时最后的验证位是否正确  </span></span><br><span class="line"><span class="comment"> * @param a_idCard 身份证号码数组  </span></span><br><span class="line"><span class="comment"> * @return  </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isTrueValidateCodeBy18IdCard</span>(<span class="params">a_idCard</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> sum = <span class="number">0</span>;                             <span class="comment">// 声明加权求和变量   </span></span><br><span class="line"><span class="keyword">if</span> (a_idCard[<span class="number">17</span>].toLowerCase() == <span class="string">'x'</span>) &#123;</span><br><span class="line">a_idCard[<span class="number">17</span>] = <span class="number">10</span>;                    <span class="comment">// 将最后位为x的验证码替换为10方便后续操作   </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">17</span>; i++) &#123;</span><br><span class="line">sum += Wi[i] * a_idCard[i];            <span class="comment">// 加权求和   </span></span><br><span class="line">&#125;</span><br><span class="line">valCodePosition = sum % <span class="number">11</span>;                <span class="comment">// 得到验证码所位置   </span></span><br><span class="line"><span class="keyword">if</span> (a_idCard[<span class="number">17</span>] == ValideCode[valCodePosition]) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**  </span></span><br><span class="line"><span class="comment">  * 验证18位数身份证号码中的生日是否是有效生日  </span></span><br><span class="line"><span class="comment">  * @param idCard 18位书身份证字符串  </span></span><br><span class="line"><span class="comment">  * @return  </span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isValidityBrithBy18IdCard</span>(<span class="params">idCard18</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> year = idCard18.substring(<span class="number">6</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">var</span> month = idCard18.substring(<span class="number">10</span>, <span class="number">12</span>);</span><br><span class="line"><span class="keyword">var</span> day = idCard18.substring(<span class="number">12</span>, <span class="number">14</span>);</span><br><span class="line"><span class="keyword">var</span> temp_date = <span class="keyword">new</span> <span class="built_in">Date</span>(year, <span class="built_in">parseFloat</span>(month) - <span class="number">1</span>, <span class="built_in">parseFloat</span>(day));</span><br><span class="line"><span class="comment">// 这里用getFullYear()获取年份，避免千年虫问题   </span></span><br><span class="line"><span class="keyword">if</span> (temp_date.getFullYear() != <span class="built_in">parseFloat</span>(year)</span><br><span class="line">|| temp_date.getMonth() != <span class="built_in">parseFloat</span>(month) - <span class="number">1</span></span><br><span class="line">|| temp_date.getDate() != <span class="built_in">parseFloat</span>(day)) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**  </span></span><br><span class="line"><span class="comment"> * 验证15位数身份证号码中的生日是否是有效生日  </span></span><br><span class="line"><span class="comment"> * @param idCard15 15位书身份证字符串  </span></span><br><span class="line"><span class="comment"> * @return  </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isValidityBrithBy15IdCard</span>(<span class="params">idCard15</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> year = idCard15.substring(<span class="number">6</span>, <span class="number">8</span>);</span><br><span class="line"><span class="keyword">var</span> month = idCard15.substring(<span class="number">8</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">var</span> day = idCard15.substring(<span class="number">10</span>, <span class="number">12</span>);</span><br><span class="line"><span class="keyword">var</span> temp_date = <span class="keyword">new</span> <span class="built_in">Date</span>(year, <span class="built_in">parseFloat</span>(month) - <span class="number">1</span>, <span class="built_in">parseFloat</span>(day));</span><br><span class="line"><span class="comment">// 对于老身份证中的你年龄则不需考虑千年虫问题而使用getYear()方法   </span></span><br><span class="line"><span class="keyword">if</span> (temp_date.getYear() != <span class="built_in">parseFloat</span>(year)</span><br><span class="line">|| temp_date.getMonth() != <span class="built_in">parseFloat</span>(month) - <span class="number">1</span></span><br><span class="line">|| temp_date.getDate() != <span class="built_in">parseFloat</span>(day)) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;js表单验证大全&quot;&gt;&lt;a href=&quot;#js表单验证大全&quot; class=&quot;headerlink&quot; title=&quot;js表单验证大全&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.baidu.com/s?wd=js表单验证大全&quot; target=&quot;_blank&quot; 
      
    
    </summary>
    
      <category term="前端" scheme="http://youhanghang.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="js" scheme="http://youhanghang.com/tags/js/"/>
    
      <category term="表单验证" scheme="http://youhanghang.com/tags/%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>移动端使用rem单位做的页面列表</title>
    <link href="http://youhanghang.com/2018/10/29/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%AE%80%E5%8D%95%E9%A1%B5%E9%9D%A2/"/>
    <id>http://youhanghang.com/2018/10/29/移动端简单页面/</id>
    <published>2018-10-29T09:00:13.150Z</published>
    <updated>2017-06-22T10:58:06.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="移动端使用rem单位做的页面列表"><a href="#移动端使用rem单位做的页面列表" class="headerlink" title="移动端使用rem单位做的页面列表."></a><a href="https://github-youhanghang.github.io/StaticPage/H5%E9%A1%B5%E9%9D%A2/pageList.html" target="_blank" rel="noopener">移动端使用rem单位做的页面列表</a>.</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;移动端使用rem单位做的页面列表&quot;&gt;&lt;a href=&quot;#移动端使用rem单位做的页面列表&quot; class=&quot;headerlink&quot; title=&quot;移动端使用rem单位做的页面列表.&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github-youhanghang.g
      
    
    </summary>
    
      <category term="前端" scheme="http://youhanghang.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>使用原生js实现jquery功能的一部分</title>
    <link href="http://youhanghang.com/2018/10/29/%E6%9B%BF%E4%BB%A3jquery%E7%9A%84%E5%8E%9F%E7%94%9Fjs%E5%AE%9E%E7%8E%B0%E5%86%99%E6%B3%95/"/>
    <id>http://youhanghang.com/2018/10/29/替代jquery的原生js实现写法/</id>
    <published>2018-10-29T09:00:13.120Z</published>
    <updated>2017-06-17T08:07:28.000Z</updated>
    
    <content type="html"><![CDATA[<p> 使用原生js实现jquery功能的一部分，实现方式：YouMightNotNeedJquery</p><h3 id="YouMightNotNeedJquery的意义"><a href="#YouMightNotNeedJquery的意义" class="headerlink" title="YouMightNotNeedJquery的意义"></a>YouMightNotNeedJquery的意义</h3><p>jQuery 包含大量的兼容性代码和扩展功能，其中有很多在你的整个项目中可能都不会用到。其实如果你只是针对现代浏览器，很多功能使用原生的 JavaScript 就可以实现，即使是拖后腿的低版本 IE 浏览器，兼容性也是很容易处理的。</p><h3 id="YouMightNotNeedJquery官方网址"><a href="#YouMightNotNeedJquery官方网址" class="headerlink" title="YouMightNotNeedJquery官方网址"></a><a href="http://youmightnotneedjquery.com/" target="_blank" rel="noopener">YouMightNotNeedJquery官方网址</a></h3><h3 id="YouMightNotNeedJquery的github网址"><a href="#YouMightNotNeedJquery的github网址" class="headerlink" title="YouMightNotNeedJquery的github网址"></a><a href="https://github.com/HubSpot/YouMightNotNeedjQuery" target="_blank" rel="noopener">YouMightNotNeedJquery的github网址</a></h3><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><iframe src="http://youmightnotneedjquery.com/" width="100%" height="1000px" frameborder="0" allowfullscreen></iframe>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; 使用原生js实现jquery功能的一部分，实现方式：YouMightNotNeedJquery&lt;/p&gt;
&lt;h3 id=&quot;YouMightNotNeedJquery的意义&quot;&gt;&lt;a href=&quot;#YouMightNotNeedJquery的意义&quot; class=&quot;headerl
      
    
    </summary>
    
      <category term="前端" scheme="http://youhanghang.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="jquery" scheme="http://youhanghang.com/tags/jquery/"/>
    
      <category term="原生js" scheme="http://youhanghang.com/tags/%E5%8E%9F%E7%94%9Fjs/"/>
    
  </entry>
  
  <entry>
    <title>前端开发经验</title>
    <link href="http://youhanghang.com/2018/10/29/%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    <id>http://youhanghang.com/2018/10/29/开发经验/</id>
    <published>2018-10-29T09:00:13.090Z</published>
    <updated>2018-10-29T02:03:40.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前端开发规范–NEC-更好的CSS样式解决方案"><a href="#前端开发规范–NEC-更好的CSS样式解决方案" class="headerlink" title="前端开发规范–NEC : 更好的CSS样式解决方案"></a><a href="http://nec.netease.com/standard/html-email.html" target="_blank" rel="noopener">前端开发规范–NEC : 更好的CSS样式解决方案</a></h3><h3 id="自己总结"><a href="#自己总结" class="headerlink" title="自己总结"></a>自己总结</h3><blockquote><ul><li>jquery通过类名获取对象时，一定要给这个元素新增 类名 ，规范可以是 j-className。然后通过 $(‘.j-className’)来获得jquery对象,理由：如果多个页面共用同一套css,html,但是js 代码处实现不同，所以应该是用 新的j-className 来当句柄，这样就能全局共用  同一套html，css。</li></ul></blockquote><blockquote><ul><li>写css先把要做的所有页面过一遍，在css文件中先把公共的css模块注释完</li></ul></blockquote><blockquote><ul><li>对库里取的值要注意NULL和’’空字符串的判断，null没有 null.indexOf，程序报错</li><li>用变量定义属性名,存储数据或对象到元素的data属性里，并获取<br><figure class="highlight javascript"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a=<span class="string">"name"</span>;</span><br><span class="line">$(<span class="string">'body'</span>).data(a,&#123;<span class="attr">c</span>:<span class="string">'1'</span>,<span class="attr">d</span>:<span class="string">'2'</span>&#125;);</span><br><span class="line">$(<span class="string">'body'</span>).data(<span class="string">'name'</span>)</span><br><span class="line"><span class="comment">//&#123;c: "1", d: "2"&#125;</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="string">"name"</span>;</span><br><span class="line"><span class="keyword">var</span> obj=&#123;&#125;;</span><br><span class="line">obj[a]=<span class="string">'xiaoming'</span>;</span><br><span class="line">obj</span><br><span class="line"><span class="comment">//&#123;name: "xiaoming"&#125;</span></span><br></pre></td></tr></table></figure>&gt; </li><li>表单填写历史信息自动完成 属性autocomplete=”on”可以设置在表单上，可以在局部表单上重新设置autocomplete=”off”<figure class="highlight html"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"demo-form.php"</span> <span class="attr">autocomplete</span>=<span class="string">"on"</span>&gt;</span></span><br><span class="line">  First name:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"fname"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  Last name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"lname"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  E-mail: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></blockquote><blockquote><ul><li>//自定义展示表格数据，双击行获取当前行数据方式展示数据时将数据 存放tr的data-row={a:1,b:2} 取数据:$(‘tr’).data(‘row’)   </li><li>向服务发请求返回数据  ，可能data==undefined,或者data.respondeCode==’’，应该做成一个公共函数去判断返回数据,做不同的处理，避免代码报错（例如返回undefined，后面代码还使用了data.out，结果导致后面js代码不能执行） </li></ul></blockquote><blockquote><ul><li>在不支持图像预览的网页上，实现预览图片的功能<br>在开发者工具上 Elements下编辑html，将viewer.min.css插入进去<br>在控制台上运行jquery框架和viewer-jquery.min.js<br>调用插件预览图片的代码 $(‘body’).viewer();</li></ul></blockquote><blockquote><ul><li>上传功能样式自定义<figure class="highlight html"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn"</span>&gt;</span>添加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"fileName"</span>  <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"upload"</span>  <span class="attr">type</span>=<span class="string">"file"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">$(<span class="string">'#btn'</span>).on(<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">$(<span class="string">'#upload'</span>)[<span class="number">0</span>].click();</span></span><br><span class="line"><span class="undefined">&#125;)</span></span><br><span class="line"><span class="javascript">$(<span class="string">'#upload'</span>).on(<span class="string">'change'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">$(<span class="string">'#fileName'</span>).val($(<span class="keyword">this</span>).val());</span></span><br><span class="line"><span class="undefined">&#125;)</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前端开发规范–NEC-更好的CSS样式解决方案&quot;&gt;&lt;a href=&quot;#前端开发规范–NEC-更好的CSS样式解决方案&quot; class=&quot;headerlink&quot; title=&quot;前端开发规范–NEC : 更好的CSS样式解决方案&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http:/
      
    
    </summary>
    
      <category term="前端" scheme="http://youhanghang.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="js" scheme="http://youhanghang.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>常用css</title>
    <link href="http://youhanghang.com/2018/10/29/%E5%B8%B8%E7%94%A8css/"/>
    <id>http://youhanghang.com/2018/10/29/常用css/</id>
    <published>2018-10-29T09:00:13.060Z</published>
    <updated>2018-10-29T02:27:52.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.daqianduan.com/6179.html" target="_blank" rel="noopener">CSS实现单行、多行文本溢出显示省略号（…）</a><br><a href="https://segmentfault.com/a/1190000003936841" target="_blank" rel="noopener">20 个 CSS 高级技巧汇总</a></p><h3 id="清除浮动代码"><a href="#清除浮动代码" class="headerlink" title="清除浮动代码"></a>清除浮动代码</h3><figure class="highlight css"><figcaption><span>[]</span></figcaption><table><tr><td class="code"><pre><span class="line">//清除浮动代码</span><br><span class="line"><span class="selector-class">.clearfloat</span><span class="selector-pseudo">:after</span> &#123;<span class="attribute">display</span>: block;<span class="attribute">clear</span>: both;<span class="attribute">content</span>: <span class="string">""</span>;<span class="attribute">visibility</span>: hidden;<span class="attribute">height</span>: <span class="number">0</span>;&#125;</span><br><span class="line"><span class="selector-class">.clearfloat</span>&#123;<span class="attribute">zoom</span>:<span class="number">1</span>;&#125;</span><br></pre></td></tr></table></figure><h3 id="溢出显示省略号"><a href="#溢出显示省略号" class="headerlink" title="溢出显示省略号"></a>溢出显示省略号</h3><figure class="highlight css"><figcaption><span>单行文本的溢出显示省略号</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;<span class="attribute">width</span>: <span class="number">100px</span>;<span class="attribute">overflow</span>: hidden;<span class="attribute">text-overflow</span>:ellipsis;<span class="attribute">white-space</span>: nowrap;&#125;</span><br><span class="line">//多行文本的溢出显示省略号</span><br><span class="line"><span class="selector-tag">p</span>&#123;  <span class="attribute">display</span>: -webkit-box;<span class="attribute">-webkit-box-orient</span>: vertical;<span class="attribute">-webkit-line-clamp</span>: <span class="number">3</span>;<span class="attribute">overflow</span>: hidden;&#125;</span><br></pre></td></tr></table></figure><h3 id="手机浏览器去除点击出现的背景色"><a href="#手机浏览器去除点击出现的背景色" class="headerlink" title="手机浏览器去除点击出现的背景色"></a>手机浏览器去除点击出现的背景色</h3><figure class="highlight css"><figcaption><span>[]</span></figcaption><table><tr><td class="code"><pre><span class="line">*&#123;<span class="attribute">-webkit-tap-highlight-color</span>: transparent;&#125;  </span><br></pre></td></tr></table></figure><h3 id="使用-not-在菜单上应用-取消应用边框"><a href="#使用-not-在菜单上应用-取消应用边框" class="headerlink" title="使用 :not() 在菜单上应用/取消应用边框"></a>使用 :not() 在菜单上应用/取消应用边框</h3><figure class="highlight css"><figcaption><span>[]</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">/* add border  先给每一个菜单项添加边框*/</span></span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">1px</span> solid <span class="number">#666</span>;</span><br><span class="line">&#125;</span><br><span class="line">//……然后再除去最后一个元素……</span><br><span class="line"></span><br><span class="line">// remove border </span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">  <span class="attribute">border-right</span>: none;</span><br><span class="line">&#125;</span><br><span class="line">//……可以直接使用 :not() 伪类来应用元素：</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">li</span><span class="selector-pseudo">:not(</span><span class="selector-pseudo">:last-child)</span> &#123;</span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">1px</span> solid <span class="number">#666</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="使用伪类设置列表元素的项目符号的颜色"><a href="#使用伪类设置列表元素的项目符号的颜色" class="headerlink" title="使用伪类设置列表元素的项目符号的颜色"></a>使用伪类设置列表元素的项目符号的颜色</h3><figure class="highlight css"><figcaption><span>[]</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.star-detail-text</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">"●"</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgb</span>(148, 97, 148);</span><br><span class="line">   <span class="attribute">position</span>: absolute;</span><br><span class="line">   <span class="attribute">left</span>: -<span class="number">20px</span>;</span><br><span class="line">   <span class="attribute">top</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CSS-实现隐藏滚动条同时又可以滚动"><a href="#CSS-实现隐藏滚动条同时又可以滚动" class="headerlink" title="CSS 实现隐藏滚动条同时又可以滚动"></a>CSS 实现隐藏滚动条同时又可以滚动</h3><figure class="highlight css"><figcaption><span>[]</span></figcaption><table><tr><td class="code"><pre><span class="line">&lt;div class="outer-container"&gt;</span><br><span class="line">     &lt;div class="inner-container"&gt;</span><br><span class="line">        &lt;div class="content"&gt;</span><br><span class="line">            ......</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">     &lt;/div&gt;</span><br><span class="line"> &lt;/div&gt;</span><br><span class="line"><span class="selector-class">.outer-container</span>,<span class="selector-class">.content</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>; <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.outer-container</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.inner-container</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute; <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">overflow-x</span>: hidden;</span><br><span class="line">    <span class="attribute">overflow-y</span>: scroll;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/* for Chrome */</span></span><br><span class="line"><span class="selector-class">.inner-container</span><span class="selector-pseudo">::-webkit-scrollbar</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="子元素在父元素居中"><a href="#子元素在父元素居中" class="headerlink" title="子元素在父元素居中"></a>子元素在父元素居中</h3><figure class="highlight html"><figcaption><span>[]</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parentElement"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"childElement"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   </span><br></pre></td></tr></table></figure><figure class="highlight css"><figcaption><span>[]</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-class">.parentElement</span>&#123;</span><br><span class="line">        <span class="attribute">position</span>:relative;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">500px</span>;<span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: red;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"> <span class="selector-class">.childElement</span>&#123;</span><br><span class="line">        <span class="attribute">position</span>: absolute;</span><br><span class="line">        <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">        <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-50%,0);</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;<span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: cadetblue;</span><br><span class="line"></span><br><span class="line"> &#125;        </span><br></pre></td></tr></table></figure><h3 id="中间标题-两边是横线的写法"><a href="#中间标题-两边是横线的写法" class="headerlink" title="中间标题 两边是横线的写法"></a>中间标题 两边是横线的写法</h3><figure class="highlight html"><figcaption><span>[]</span></figcaption><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.checkout-title</span>&#123;</span></span><br><span class="line"><span class="undefined">        height: 50px;</span></span><br><span class="line"><span class="undefined">        line-height: 50px;</span></span><br><span class="line"><span class="undefined">        position: relative;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.checkout-title</span><span class="selector-pseudo">:before</span> &#123;</span></span><br><span class="line"><span class="undefined">    position: absolute;</span></span><br><span class="line"><span class="undefined">    top: 50%;</span></span><br><span class="line"><span class="undefined">    left: 0;</span></span><br><span class="line"><span class="undefined">    content: "";</span></span><br><span class="line"><span class="undefined">    width: 100%;</span></span><br><span class="line"><span class="undefined">    height: 1px;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">background</span>: <span class="selector-id">#ccc</span>;</span></span><br><span class="line"><span class="undefined">    z-index: 0;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    </span></span><br><span class="line"><span class="css">    <span class="selector-class">.checkout-title</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="undefined">    position: relative;</span></span><br><span class="line"><span class="undefined">    padding: 0 1em;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line"><span class="undefined">    font-family: "moderat", sans-serif;</span></span><br><span class="line"><span class="undefined">    font-weight: bold;</span></span><br><span class="line"><span class="undefined">    font-size: 20px;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#605F5F</span>;</span></span><br><span class="line"><span class="undefined">    z-index: 1;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkout-title"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>购购物车购物车购物车购物车购物车购物车购物车购物车购物车物车<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight css"><figcaption><span>[]</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="表头固定，表格内容固定高度可滚动滚动做法"><a href="#表头固定，表格内容固定高度可滚动滚动做法" class="headerlink" title="表头固定，表格内容固定高度可滚动滚动做法"></a>表头固定，表格内容固定高度可滚动滚动做法</h3><figure class="highlight html"><figcaption><span>[]</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table   table-hover bordered"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">"140"</span>&gt;</span>客户姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">"140"</span>&gt;</span>证件类型<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">"240"</span>&gt;</span>证件号码<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">"140"</span>&gt;</span>状态<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">"140"</span>&gt;</span>操作</span><br><span class="line">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"table-overflow-auto"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table   table-hover bordered"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">colgroup</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">col</span> <span class="attr">style</span>=<span class="string">"width: 140px;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">col</span> <span class="attr">style</span>=<span class="string">"width:140px"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">col</span> <span class="attr">style</span>=<span class="string">"width: 240px;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">col</span> <span class="attr">style</span>=<span class="string">"width: 140px;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">col</span> <span class="attr">style</span>=<span class="string">"width: 140px;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">colgroup</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span> <span class="attr">id</span>=<span class="string">"todobusiness-table"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">id</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><figcaption><span>[]</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">   <span class="comment">/*固定高度 可滚动*/</span>    </span><br><span class="line"><span class="selector-class">.table-overflow-auto</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">342px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: auto;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">1px</span>;</span><br><span class="line">&#125;</span><br><span class="line">   <span class="comment">/*滚动条宽高隐藏*/</span>    </span><br><span class="line"><span class="selector-class">.table-overflow-auto</span><span class="selector-pseudo">::-webkit-scrollbar</span> &#123;</span><br><span class="line">   <span class="attribute">display</span>: none;</span><br><span class="line">&#125;      </span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://www.daqianduan.com/6179.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;CSS实现单行、多行文本溢出显示省略号（…）&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://segmentfault.
      
    
    </summary>
    
      <category term="前端" scheme="http://youhanghang.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="css" scheme="http://youhanghang.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>js原生dom操作</title>
    <link href="http://youhanghang.com/2018/10/29/%E5%8E%9F%E7%94%9Fjs%E7%9A%84dom%E6%93%8D%E4%BD%9C/"/>
    <id>http://youhanghang.com/2018/10/29/原生js的dom操作/</id>
    <published>2018-10-29T09:00:13.030Z</published>
    <updated>2017-10-15T06:53:26.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><a href=""></a></h2><figure class="highlight javascript"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">/***兼容获得需要值的写法**/</span></span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// javascript scrollTop正解使用方法</span></span><br><span class="line">    <span class="keyword">var</span> scrollTop = <span class="built_in">window</span>.pageYOffset || <span class="built_in">document</span>.documentElement.scrollTop || <span class="built_in">document</span>.body.scrollTop;</span><br><span class="line"></span><br><span class="line">&#125;)()</span><br><span class="line"></span><br><span class="line"><span class="comment">//容错ie的方法，将类数组转换为数组</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">nodeListToArray</span>(<span class="params">nodes</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arr;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 非IE支持</span></span><br><span class="line">        arr = [].slice.call(nodes);</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123; <span class="comment">//支持IE</span></span><br><span class="line">        arr = [];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, length = nodes.length; i &lt; length; i++) &#123;</span><br><span class="line">            arr.push(nodes[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Array.forEach implementation for IE 7,8 support..  使ie支持foreach  </span></span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">Array</span>.prototype.forEach) &#123;</span><br><span class="line">    <span class="built_in">Array</span>.prototype.forEach = <span class="function"><span class="keyword">function</span>(<span class="params">callback, thisArg</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> T, k;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span> == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">TypeError</span>(<span class="string">" this is null or not defined"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> O = <span class="built_in">Object</span>(<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">var</span> len = O.length &gt;&gt;&gt; <span class="number">0</span>; <span class="comment">// Hack to convert O.length to a UInt32  </span></span><br><span class="line">        <span class="keyword">if</span> (&#123;&#125;.toString.call(callback) != <span class="string">"[object Function]"</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">TypeError</span>(callback + <span class="string">" is not a function"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (thisArg) &#123;</span><br><span class="line">            T = thisArg;</span><br><span class="line">        &#125;</span><br><span class="line">        k = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (k &lt; len) &#123;</span><br><span class="line">            <span class="keyword">var</span> kValue;</span><br><span class="line">            <span class="keyword">if</span> (k <span class="keyword">in</span> O) &#123;</span><br><span class="line">                kValue = O[k];</span><br><span class="line">                callback.call(T, kValue, k, O);</span><br><span class="line">            &#125;</span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//火狐浏览器不支持outerHtml的办法，不知道哪个版本不支持</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">outerHtml</span>(<span class="params">elem</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> elem === <span class="string">"string"</span>) elem = <span class="built_in">document</span>.getElementById(elem);</span><br><span class="line">    <span class="comment">// 创建一个空div节点</span></span><br><span class="line">    <span class="keyword">var</span> div = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">    <span class="comment">// 将复制的elemCopy插入到空div节点中 </span></span><br><span class="line">    div.appendChild(elem.cloneNode(<span class="literal">true</span>));</span><br><span class="line">    <span class="comment">// 返回div的HTML内容</span></span><br><span class="line">    <span class="keyword">return</span> div.innerHTML;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/***兼容获得需要值的写法 结束**/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/***********获得属性******************/</span></span><br><span class="line"><span class="comment">//获取dom的style下的属性  可以获得absolute元素的top和left</span></span><br><span class="line"><span class="comment">// js在获取css属性时如果标签中无style则无法直接获取css中的属性，所以需要一个方法可以做到这点。</span></span><br><span class="line"><span class="comment">// getStyle(obj,attr) 调用方法说明：obj为对像,attr为属性名必须兼容js中的写法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getStyle</span>(<span class="params">obj, attr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ie = !+<span class="string">"\v1"</span>; <span class="comment">//简单判断ie6~8</span></span><br><span class="line">    <span class="keyword">if</span> (attr == <span class="string">"backgroundPosition"</span>) &#123; <span class="comment">//IE6~8不兼容backgroundPosition写法，识别backgroundPositionX/Y</span></span><br><span class="line">        <span class="keyword">if</span> (ie) &#123;</span><br><span class="line">            <span class="keyword">return</span> obj.currentStyle.backgroundPositionX + <span class="string">" "</span> + obj.currentStyle.backgroundPositionY;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (obj.currentStyle) &#123;</span><br><span class="line">        <span class="keyword">return</span> obj.currentStyle[attr];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">document</span>.defaultView.getComputedStyle(obj, <span class="literal">null</span>)[attr];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/****************获得元素相对于页面位置，区别于相对窗口的位置*****************/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getBoundingClientRect</span>(<span class="params">element</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> scrollTop = <span class="built_in">document</span>.documentElement.scrollTop;</span><br><span class="line">    <span class="keyword">var</span> scrollLeft = <span class="built_in">document</span>.documentElement.scrollLeft;</span><br><span class="line">    <span class="keyword">if</span> (element.getBoundingClientRect) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">arguments</span>.callee.offset != <span class="string">"number"</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> temp = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">            temp.style.cssText = <span class="string">"position:absolute;left:0;top:0;"</span>;</span><br><span class="line">            <span class="built_in">document</span>.body.appendChild(temp);</span><br><span class="line">            <span class="built_in">arguments</span>.callee.offset = -temp.getBoundingClientRect().top - scrollTop;</span><br><span class="line">            <span class="built_in">document</span>.body.removeChild(temp);</span><br><span class="line">            temp = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> rect = element.getBoundingClientRect();</span><br><span class="line">        <span class="keyword">var</span> offset = <span class="built_in">arguments</span>.callee.offset;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            left: rect.left + offset,</span><br><span class="line">            right: rect.right + offset,</span><br><span class="line">            top: rect.top + offset,</span><br><span class="line">            bottom: rect.bottom + offset</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> actualLeft = getElementLeft(element);</span><br><span class="line">        <span class="keyword">var</span> actualTop = getElementTop(element);</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            left: actualLeft - scrollLeft,</span><br><span class="line">            right: actualLeft + element.offsetWidth - scrollLeft,</span><br><span class="line">            top: actualTop - scrollTop,</span><br><span class="line">            bottom: actualTop + element.offsetHeight - scrollTop</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得当前页面滚动的距离</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getScrollTop</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> scrollTop = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.documentElement &amp;&amp; <span class="built_in">document</span>.documentElement.scrollTop) &#123;</span><br><span class="line">        scrollTop = <span class="built_in">document</span>.documentElement.scrollTop;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.body) &#123;</span><br><span class="line">        scrollTop = <span class="built_in">document</span>.body.scrollTop;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> scrollTop;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**************选择器***************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//getElementsByClassName 方法支持ie8,7。对没有getElementsByClassName方法的浏览器版本添加上这个方法</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">document</span>.getElementsByClassName) &#123;</span><br><span class="line">    <span class="built_in">document</span>.getElementsByClassName = <span class="function"><span class="keyword">function</span>(<span class="params">className, element</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> children = (element || <span class="built_in">document</span>).getElementsByTagName(<span class="string">'*'</span>);</span><br><span class="line">        <span class="keyword">var</span> elements = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; children.length; i++) &#123;</span><br><span class="line">            <span class="keyword">var</span> child = children[i];</span><br><span class="line">            <span class="keyword">var</span> classNames = child.className.split(<span class="string">' '</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; classNames.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (classNames[j] == className) &#123;</span><br><span class="line">                    elements.push(child);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> elements;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取id 传入 #+id</span></span><br><span class="line"><span class="comment">//获取class 传入 .+class</span></span><br><span class="line"><span class="comment">//获取标签 传入 标签名</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> which = obj.substr(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">var</span> newName = obj.split(which)[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> (which == <span class="string">'#'</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">document</span>.getElementById(newName);</span><br><span class="line">    &#125; <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">if</span> (which == <span class="string">'.'</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">document</span>.getElementsByClassName(newName);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">document</span>.getElementsByTagName(obj);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/****************文档处理*****************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//var strHtml='';</span></span><br><span class="line"><span class="comment">//用 node.innerHTML=;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//内部处理</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// javascript追加html实现类似jQuery中append方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// $('.outer')[0].innerHTML+='&lt;span&gt;111&lt;/span&gt;';</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/************筛选****************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//过滤</span></span><br><span class="line"><span class="comment">//获得当前元素在父元素的索引</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getItemIndex</span>(<span class="params">current, obj</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; obj.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (obj[i] == current) &#123;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hasClass</span>(<span class="params">obj, cls</span>) </span>&#123; <span class="comment">// 判断obj是否有此class</span></span><br><span class="line">    <span class="keyword">return</span> obj.className.match(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'(\\s|^)'</span> + cls + <span class="string">'(\\s|$)'</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addClass</span>(<span class="params">obj, cls</span>) </span>&#123; <span class="comment">//给 obj添加class</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">this</span>.hasClass(obj, cls)) &#123;</span><br><span class="line">        obj.className += <span class="string">" "</span> + cls;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">removeClass</span>(<span class="params">obj, cls</span>) </span>&#123; <span class="comment">//移除obj对应的class</span></span><br><span class="line">    <span class="keyword">if</span> (hasClass(obj, cls)) &#123;</span><br><span class="line">        <span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'(\\s|^)'</span> + cls + <span class="string">'(\\s|$)'</span>);</span><br><span class="line">        obj.className = obj.className.replace(reg, <span class="string">" "</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//查找</span></span><br><span class="line"><span class="comment">//获取元素的兄弟节点</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">siblings</span>(<span class="params">o</span>) </span>&#123; <span class="comment">//参数o就是想取谁的兄弟节点，就把那个元素传进去</span></span><br><span class="line">    <span class="keyword">var</span> a = []; <span class="comment">//定义一个数组，用来存储o的兄弟元素</span></span><br><span class="line">    <span class="comment">//previousSibling返回位于相同节点树层级的前一个元素</span></span><br><span class="line">    <span class="keyword">var</span> p = o.previousSibling;</span><br><span class="line">    <span class="keyword">while</span> (p) &#123; <span class="comment">//先取o的前面的兄弟元素 判断有没有上一个兄弟元素，如果有则往下执行，p表示previousSibling</span></span><br><span class="line">        <span class="keyword">if</span> (p.nodeType === <span class="number">1</span>) &#123;</span><br><span class="line">            a.push(p);</span><br><span class="line">        &#125;</span><br><span class="line">        p = p.previousSibling <span class="comment">//最后把上一个节点赋给p</span></span><br><span class="line">    &#125;</span><br><span class="line">    a.reverse(); <span class="comment">//把顺序反转一下，这样元素的顺序就是按先后的了</span></span><br><span class="line">    <span class="comment">//nextSibling返回位于相同节点树层级的下一个节点</span></span><br><span class="line">    <span class="keyword">var</span> n = o.nextSibling; <span class="comment">//再取o下面的兄弟元素</span></span><br><span class="line">    <span class="keyword">while</span> (n) &#123; <span class="comment">//判断有没有下一个兄弟结点，n是nextSibling的意思</span></span><br><span class="line">        <span class="keyword">if</span> (n.nodeType === <span class="number">1</span>) &#123; <span class="comment">//判断是否是元素节点</span></span><br><span class="line">            a.push(n);</span><br><span class="line">        &#125;</span><br><span class="line">        n = n.nextSibling;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a <span class="comment">//最后按从老大到老小的顺序，把这一组元素返回</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取下一个元素结点</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; node  兄结点</span></span><br><span class="line"><span class="comment"> * @return &#123;Object || null&#125;下一个元素结点或未获取到</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getNextElement</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (node.nextSibling.nodeType == <span class="number">1</span>) &#123; <span class="comment">//判断下一个节点类型为1则是“元素”节点   </span></span><br><span class="line">        <span class="keyword">return</span> node.nextSibling;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (node.nextSibling.nodeType == <span class="number">3</span>) &#123; <span class="comment">//判断下一个节点类型为3则是“文本”节点  ，回调自身函数  </span></span><br><span class="line">        <span class="keyword">return</span> getNextElement(node.nextSibling);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getChildNodes</span>(<span class="params">ele</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//为了提高代码的兼容性，避免个别浏览器不支持 children 或 childNodes 的情况，可以这样编写代码：</span></span><br><span class="line">    <span class="keyword">var</span> childArr = ele.children || ele.childNodes;</span><br><span class="line">    childArrTem = <span class="keyword">new</span> <span class="built_in">Array</span>(); <span class="comment">//  临时数组，用来存储符合条件的节点</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, len = childArr.length; i &lt; len; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (childArr[i].nodeType == <span class="number">1</span>) &#123;</span><br><span class="line">            childArrTem.push(childArr[i]); <span class="comment">// push() 方法将节点添加到数组尾部</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> childArrTem;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取元素的兄弟节点</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">siblings</span>(<span class="params">o</span>) </span>&#123; <span class="comment">//参数o就是想取谁的兄弟节点，就把那个元素传进去</span></span><br><span class="line">    <span class="keyword">var</span> a = []; <span class="comment">//定义一个数组，用来存储o的兄弟元素</span></span><br><span class="line">    <span class="comment">//previousSibling返回位于相同节点树层级的前一个元素</span></span><br><span class="line">    <span class="keyword">var</span> p = o.previousSibling;</span><br><span class="line">    <span class="keyword">while</span> (p) &#123; <span class="comment">//先取o的前面的兄弟元素 判断有没有上一个兄弟元素，如果有则往下执行，p表示previousSibling</span></span><br><span class="line">        <span class="keyword">if</span> (p.nodeType === <span class="number">1</span>) &#123;</span><br><span class="line">            a.push(p);</span><br><span class="line">        &#125;</span><br><span class="line">        p = p.previousSibling <span class="comment">//最后把上一个节点赋给p</span></span><br><span class="line">    &#125;</span><br><span class="line">    a.reverse(); <span class="comment">//把顺序反转一下，这样元素的顺序就是按先后的了</span></span><br><span class="line">    <span class="comment">//nextSibling返回位于相同节点树层级的下一个节点</span></span><br><span class="line">    <span class="keyword">var</span> n = o.nextSibling; <span class="comment">//再取o下面的兄弟元素</span></span><br><span class="line">    <span class="keyword">while</span> (n) &#123; <span class="comment">//判断有没有下一个兄弟结点，n是nextSibling的意思</span></span><br><span class="line">        <span class="keyword">if</span> (n.nodeType === <span class="number">1</span>) &#123; <span class="comment">//判断是否是元素节点</span></span><br><span class="line">            a.push(n);</span><br><span class="line">        &#125;</span><br><span class="line">        n = n.nextSibling;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a <span class="comment">//最后按从老大到老小的顺序，把这一组元素返回</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*************效果******************/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params">obj, json, interval, sp, fn</span>) </span>&#123;</span><br><span class="line">    clearInterval(obj.timer);</span><br><span class="line">    <span class="comment">//var k = 0;</span></span><br><span class="line">    <span class="comment">//var j = 0;</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getStyle</span>(<span class="params">obj, arr</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (obj.currentStyle) &#123;</span><br><span class="line">            <span class="keyword">return</span> obj.currentStyle[arr]; <span class="comment">//针对ie</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">document</span>.defaultView.getComputedStyle(obj, <span class="literal">null</span>)[arr];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    obj.timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//j ++;</span></span><br><span class="line">        <span class="keyword">var</span> flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> arr <span class="keyword">in</span> json) &#123;</span><br><span class="line">            <span class="keyword">var</span> icur = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">//k++;</span></span><br><span class="line">            <span class="keyword">if</span> (arr == <span class="string">"opacity"</span>) &#123;</span><br><span class="line">                icur = <span class="built_in">Math</span>.round(<span class="built_in">parseFloat</span>(getStyle(obj, arr)) * <span class="number">100</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                icur = <span class="built_in">parseInt</span>(getStyle(obj, arr));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> speed = (json[arr] - icur) * sp;</span><br><span class="line">            speed = speed &gt; <span class="number">0</span> ? <span class="built_in">Math</span>.ceil(speed) : <span class="built_in">Math</span>.floor(speed);</span><br><span class="line">            <span class="keyword">if</span> (icur != json[arr]) &#123;</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (arr == <span class="string">"opacity"</span>) &#123;</span><br><span class="line">                obj.style.filter = <span class="string">"alpha(opacity : '+(icur + speed)+' )"</span>;</span><br><span class="line">                obj.style.opacity = (icur + speed) / <span class="number">100</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                obj.style[arr] = icur + speed + <span class="string">"px"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//console.log(j + "," + arr +":"+ flag);</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            clearInterval(obj.timer);</span><br><span class="line">            <span class="comment">//console.log(j + ":" + flag); </span></span><br><span class="line">            <span class="comment">//console.log("k = " + k);</span></span><br><span class="line">            <span class="comment">//console.log("j = " + j);</span></span><br><span class="line">            <span class="comment">//console.log("DONE");</span></span><br><span class="line">            <span class="keyword">if</span> (fn) &#123;</span><br><span class="line">                fn();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, interval);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/***************ajax*******************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 原生ajax</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//get get get</span></span><br><span class="line"><span class="comment">// 使用 GET 请求经常会发生的一个错误，就是查询字符串的格式有问题。查询字符串中每个参数的名</span></span><br><span class="line"><span class="comment">// 称和值都必须使用 encodeURIComponent()进行编码，然后才能放到 URL 的末尾；而且所有名-值对</span></span><br><span class="line"><span class="comment">// 儿都必须由和号（&amp;）分隔，如下面的例子所示。</span></span><br><span class="line"><span class="comment">// xhr.open("get", "example.php?name1=value1&amp;name2=value2", true);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 下面这个函数可以辅助向现有 URL 的末尾添加查询字符串参数：</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addURLParam</span>(<span class="params">url, name, value</span>) </span>&#123;</span><br><span class="line">    url += (url.indexOf(<span class="string">"?"</span>) == <span class="number">-1</span> ? <span class="string">"?"</span> : <span class="string">"&amp;"</span>);</span><br><span class="line">    url += <span class="built_in">encodeURIComponent</span>(name) + <span class="string">"="</span> + <span class="built_in">encodeURIComponent</span>(value);</span><br><span class="line">    <span class="keyword">return</span> url;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下面是使用这个函数来构建请求 URL 的示例。</span></span><br><span class="line"><span class="comment">// var url = "example.php";</span></span><br><span class="line"><span class="comment">// //添加参数</span></span><br><span class="line"><span class="comment">// url = addURLParam(url, "name", "Nicholas");</span></span><br><span class="line"><span class="comment">// url = addURLParam(url, "book", "Professional JavaScript");</span></span><br><span class="line"><span class="comment">// //初始化请求</span></span><br><span class="line"><span class="comment">// xhr.open("get", url, false);</span></span><br><span class="line"><span class="comment">// 在这里使用 addURLParam()函数可以确保查询字符串的格式良好，并可靠地用于 XHR 对象。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//get 请求实例</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// var xhr = createXHR();</span></span><br><span class="line"><span class="comment">// xhr.onreadystatechange = function() &#123;</span></span><br><span class="line"><span class="comment">//     if (xhr.readyState == 4) &#123;</span></span><br><span class="line"><span class="comment">//         if ((xhr.status &gt;= 200 &amp;&amp; xhr.status &lt; 300) || xhr.status == 304) &#123;</span></span><br><span class="line"><span class="comment">//             alert(xhr.responseText);</span></span><br><span class="line"><span class="comment">//         &#125; else &#123;</span></span><br><span class="line"><span class="comment">//             alert("Request was unsuccessful: " + xhr.status);</span></span><br><span class="line"><span class="comment">//         &#125;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"><span class="comment">// var url = "/myweb/public/index/index/hello";</span></span><br><span class="line"><span class="comment">// //添加参数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// url = addURLParam(url, "book", "Professional JavaScript");</span></span><br><span class="line"><span class="comment">// xhr.open("get", url, false);</span></span><br><span class="line"><span class="comment">// xhr.send(null);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//post post post</span></span><br><span class="line"><span class="comment">// 这个函数中新增的代码首先检测原生 XHR 对象是否存在，如果存在则返回它的新实例。如果原生</span></span><br><span class="line"><span class="comment">// 对象不存在，则检测 ActiveX 对象。如果这两种对象都不存在，就抛出一个错误。然后，就可以使用下</span></span><br><span class="line"><span class="comment">// 面的代码在所有浏览器中创建 XHR 对象了。</span></span><br><span class="line"><span class="comment">// var xhr = createXHR();</span></span><br><span class="line"><span class="comment">// 由于其他浏览器中对 XHR 的实现与 IE 最早的实现是兼容的，因此就可以在所有浏览器中都以相同</span></span><br><span class="line"><span class="comment">// 方式使用上面创建的 xhr 对象</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createXHR</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> XMLHttpRequest != <span class="string">"undefined"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> ActiveXObject != <span class="string">"undefined"</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">arguments</span>.callee.activeXString != <span class="string">"string"</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> versions = [<span class="string">"MSXML2.XMLHttp.6.0"</span>, <span class="string">"MSXML2.XMLHttp.3.0"</span>,</span><br><span class="line">                    <span class="string">"MSXML2.XMLHttp"</span></span><br><span class="line">                ],</span><br><span class="line">                i, len;</span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">0</span>, len = versions.length; i &lt; len; i++) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">new</span> ActiveXObject(versions[i]);</span><br><span class="line">                    <span class="built_in">arguments</span>.callee.activeXString = versions[i];</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (ex) &#123;</span><br><span class="line">                    <span class="comment">//跳过</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ActiveXObject(<span class="built_in">arguments</span>.callee.activeXString);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">"No XHR object available."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 我们可以使用 XHR 来模仿表单提</span></span><br><span class="line"><span class="comment">// 交：首先将 Content-Type 头部信息设置为 application/x-www-form-urlencoded，也就是表单</span></span><br><span class="line"><span class="comment">// 提交时的内容类型，其次是以适当的格式创建一个字符串。第 14 章曾经讨论过， POST 数据的格式与查</span></span><br><span class="line"><span class="comment">// 询字符串格式相同。如果需要将页面中表单的数据进行序列化，然后再通过 XHR 发送到服务器，那么</span></span><br><span class="line"><span class="comment">// 就可以使用第 14 章介绍的 serialize()函数来创建这个字符串</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//post实例</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// function submitData() &#123;</span></span><br><span class="line"><span class="comment">//     var xhr = createXHR();</span></span><br><span class="line"><span class="comment">//     xhr.onreadystatechange = function() &#123;</span></span><br><span class="line"><span class="comment">//         if (xhr.readyState == 4) &#123;</span></span><br><span class="line"><span class="comment">//             if ((xhr.status &gt;= 200 &amp;&amp; xhr.status &lt; 300) || xhr.status == 304) &#123;</span></span><br><span class="line"><span class="comment">//                 alert(xhr.responseText);</span></span><br><span class="line"><span class="comment">//             &#125; else &#123;</span></span><br><span class="line"><span class="comment">//                 alert("Request was unsuccessful: " + xhr.status);</span></span><br><span class="line"><span class="comment">//             &#125;</span></span><br><span class="line"><span class="comment">//         &#125;</span></span><br><span class="line"><span class="comment">//     &#125;;</span></span><br><span class="line"><span class="comment">//     xhr.open("post", "/myweb/public/index/index/hello", true);</span></span><br><span class="line"><span class="comment">//     xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");</span></span><br><span class="line"><span class="comment">//     var form = document.getElementById("form1");</span></span><br><span class="line"><span class="comment">//     xhr.send(serialize(form));</span></span><br><span class="line"><span class="comment">//     console.log('zhixingle')</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// submitData();</span></span><br><span class="line"><span class="comment">/*************其他****************/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">serialize</span>(<span class="params">form</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> parts = [],</span><br><span class="line">        field = <span class="literal">null</span>,</span><br><span class="line">        i,</span><br><span class="line">        len,</span><br><span class="line">        j,</span><br><span class="line">        optLen,</span><br><span class="line">        option,</span><br><span class="line">        optValue;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>, len = form.elements.length; i &lt; len; i++) &#123;</span><br><span class="line">        field = form.elements[i];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (field.type) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"select-one"</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"select-multiple"</span>:</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (field.name.length) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (j = <span class="number">0</span>, optLen = field.options.length; j &lt; optLen; j++) &#123;</span><br><span class="line">                        option = field.options[j];</span><br><span class="line">                        <span class="keyword">if</span> (option.selected) &#123;</span><br><span class="line">                            optValue = <span class="string">""</span>;</span><br><span class="line">                            <span class="keyword">if</span> (option.hasAttribute) &#123;</span><br><span class="line">                                optValue = (option.hasAttribute(<span class="string">"value"</span>) ? option.value : option.text);</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                optValue = (option.attributes[<span class="string">"value"</span>].specified ? option.value : option.text);</span><br><span class="line">                            &#125;</span><br><span class="line">                            parts.push(<span class="built_in">encodeURIComponent</span>(field.name) + <span class="string">"="</span> + <span class="built_in">encodeURIComponent</span>(optValue));</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> <span class="literal">undefined</span>: <span class="comment">//fieldset</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">"file"</span>: <span class="comment">//file input</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">"submit"</span>: <span class="comment">//submit button</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">"reset"</span>: <span class="comment">//reset button</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">"button"</span>: <span class="comment">//custom button</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> <span class="string">"radio"</span>: <span class="comment">//radio button</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">"checkbox"</span>: <span class="comment">//checkbox</span></span><br><span class="line">                <span class="keyword">if</span> (!field.checked) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">/* falls through */</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="comment">//don't include form fields without names</span></span><br><span class="line">                <span class="keyword">if</span> (field.name.length) &#123;</span><br><span class="line">                    parts.push(<span class="built_in">encodeURIComponent</span>(field.name) + <span class="string">"="</span> + <span class="built_in">encodeURIComponent</span>(field.value));</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> parts.join(<span class="string">"&amp;"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;figcaption&gt;&lt;span&gt;[标题] [] [ur
      
    
    </summary>
    
      <category term="前端" scheme="http://youhanghang.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="js" scheme="http://youhanghang.com/tags/js/"/>
    
      <category term="dom操作" scheme="http://youhanghang.com/tags/dom%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>前端插件收藏</title>
    <link href="http://youhanghang.com/2018/10/29/%E5%89%8D%E7%AB%AF%E6%8F%92%E4%BB%B6%E6%94%B6%E8%97%8F/"/>
    <id>http://youhanghang.com/2018/10/29/前端插件收藏/</id>
    <published>2018-10-29T09:00:13.000Z</published>
    <updated>2018-01-15T09:27:04.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.baidu.com/s?wd=前端插件收藏" target="_blank" rel="noopener">百度搜索前端插件收藏</a><br><a href="https://github-youhanghang.github.io/Examples/" target="_blank" rel="noopener">前端案例收藏</a><br><a href="https://github.com/iamjoel/front-end-plugins" target="_blank" rel="noopener">Web 前端常用插件</a></p><blockquote><ul><li><a href="https://github.com/Prinzhorn/skrollr" target="_blank" rel="noopener">滚动视差</a></li><li><a href="http://dynamicsjs.com/" target="_blank" rel="noopener">创建逼真的物理动画的 JS 库</a></li><li></li><li></li><li></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.baidu.com/s?wd=前端插件收藏&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;百度搜索前端插件收藏&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github-youhanghang.github.i
      
    
    </summary>
    
      <category term="前端" scheme="http://youhanghang.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="收集" scheme="http://youhanghang.com/tags/%E6%94%B6%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>写过的oracle语句</title>
    <link href="http://youhanghang.com/2018/10/29/%E5%86%99%E8%BF%87%E7%9A%84oracle%E8%AF%AD%E5%8F%A5/"/>
    <id>http://youhanghang.com/2018/10/29/写过的oracle语句/</id>
    <published>2018-10-29T09:00:12.970Z</published>
    <updated>2018-01-09T07:40:44.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用时间戳去查询某个时间的数据库里的数据"><a href="#使用时间戳去查询某个时间的数据库里的数据" class="headerlink" title="使用时间戳去查询某个时间的数据库里的数据"></a>使用时间戳去查询某个时间的数据库里的数据</h3><p>SELECT * FROM SYS_CODE AS OF TIMESTAMP TO_TIMESTAMP ( ‘2017-12-08 11:00:00’, ‘yyyy-mm-dd hh24:mi:ss’ ) where CODE_KIND like ‘%指标%’;</p><h3 id="聚合函数和groupby使用"><a href="#聚合函数和groupby使用" class="headerlink" title="聚合函数和groupby使用"></a>聚合函数和groupby使用</h3><figure class="highlight sql"><figcaption><span>[]</span></figcaption><table><tr><td class="code"><pre><span class="line">//按code_order排序查询出 code_kind = '经济技术指标'下，7大分类和其的下面子分类</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">RAWTOHEX (SYS_GUID()) <span class="keyword">AS</span> <span class="keyword">ID</span>,</span><br><span class="line"><span class="built_in">text</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"><span class="built_in">text</span>,<span class="keyword">max</span>(code_order) code_order</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">code_kind || <span class="string">'#'</span> || CODE_EXTEND ||<span class="string">'#'</span>|| CODE_COMMENT <span class="built_in">text</span>,</span><br><span class="line">code_order</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">sys_code</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">code_kind = <span class="string">'经济技术指标'</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">CODE_ORDER</span><br><span class="line">)</span><br><span class="line"><span class="keyword">GROUP</span>  <span class="keyword">BY</span></span><br><span class="line"><span class="built_in">text</span> </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> code_order</span><br><span class="line">)</span><br><span class="line"><span class="number">1940196</span>AA8464F8EBBD748AADEA37448经济技术指标#采油厂#主要经济技术指标<span class="number">19007904.41</span></span><br><span class="line">EEDF42BF48E146C88376A33B071B84B7经济技术指标#采气厂#主要经济技术指标<span class="number">19082216.34</span></span><br><span class="line">C66FC38AAC9B433FBA4014DF35E87CBE经济技术指标#净化厂#主要经济技术指标<span class="number">19330989.19</span></span><br><span class="line">ADC493ECA2F0440990A19A95C320BAFD经济技术指标#采油(气)管理区#采油管理区<span class="number">19347891.18</span></span><br><span class="line"><span class="number">263</span>BAEB90E744F4FB0BE122473F9BB8D经济技术指标#采油(气)管理区#采气管理区<span class="number">19349672.56</span></span><br><span class="line"><span class="number">36965005827</span>C436483129B188B7477D8经济技术指标#采油(气)厂科研单位#采油厂地质研究所<span class="number">19411223.36</span></span><br><span class="line"><span class="number">4</span>B36BAC1FADC4B63AA205E3B8CAC1466经济技术指标#采油(气)厂科研单位#采油厂工艺研究所<span class="number">19411247.36</span></span><br><span class="line"><span class="number">024</span>AC7FC298C43EDBAFEC20693CD0F66经济技术指标#采油(气)厂科研单位#采油厂开发研究所<span class="number">19411283.36</span></span><br><span class="line"><span class="number">0</span>C583DDA75534BCDBB3DFB35A32E990E经济技术指标#采油(气)厂科研单位#采气厂地质研究所<span class="number">19411292.36</span></span><br><span class="line"><span class="number">341</span>F0E80EA6044FA9EC38F116E6FBF9C经济技术指标#采油(气)厂科研单位#采气厂工艺研究所<span class="number">19411307.36</span></span><br><span class="line"><span class="number">340958</span>BACDB8457E80BADA85A99FDE0C经济技术指标#采油(气)厂科研单位#采气厂开发研究所<span class="number">19411325.36</span></span><br><span class="line">B592CCF2233A4BC7AAC8C90FC65FB7C5经济技术指标#集输站库#联合站(库)考核指标<span class="number">19413747.17</span></span><br><span class="line"><span class="number">9</span>F4A512D9CDF47729815FF60B8FA15AF经济技术指标#集输站库#油库首(末)站<span class="number">19429714.94</span></span><br><span class="line"><span class="number">23E8474</span>C0BC94E60A312F9A58A02CA8F经济技术指标#集输站库#污水处理站<span class="number">19431122.87</span></span><br><span class="line"><span class="number">8</span>F977A28A79140389D6669AFEB488D93经济技术指标#集输站库#输气队、集(压)气站<span class="number">19518298.82</span></span><br><span class="line">AD75747D36A04C39965AA69B749E9B98经济技术指标#集输站库#气体处理站、天然气净化站(车间)<span class="number">19519173.34</span></span><br><span class="line"><span class="number">1</span>B92168931BE462DB9834CFAA8B292E2经济技术指标#集输站库#变电所<span class="number">19519948.89</span></span><br><span class="line"><span class="number">1</span>FBD020EE667427D9CF1B3A5BB83920D经济技术指标#专业化队伍#井下作业队(大修队、压列队、试油队)<span class="number">19520403.65</span></span><br><span class="line"><span class="number">983</span>B5AD47BD54835BE4A79B537CA095C经济技术指标#专业化队伍#注汽队<span class="number">19520887.44</span></span><br><span class="line"><span class="number">7</span>C7B936FB2D34A33901115350FA072EB经济技术指标#专业化队伍#注聚队<span class="number">19522366.16</span></span><br><span class="line">E733B848F071406C9D15B81861EE8F79经济技术指标#专业化队伍#测试队<span class="number">19523163.49</span></span><br><span class="line"><span class="number">60</span>B1C13D742C454E9D4CF9AD906EBA82经济技术指标#专业化队伍#厂直属维修队、生产准备队、安装队<span class="number">19523799.68</span></span><br><span class="line"><span class="number">2827</span>A7D83728427690E40C0B2D16C6FE经济技术指标#专业化队伍#运输(特车)队<span class="number">19524075.88</span></span><br></pre></td></tr></table></figure><h3 id="将一行数据折成三行显示"><a href="#将一行数据折成三行显示" class="headerlink" title="将一行数据折成三行显示"></a>将一行数据折成三行显示</h3><p>原来的一行数据</p><p>EPXID    DATA_WRAP    DATA_KIND    DATA_OTHERFLAG    DATA_STATE    DATA_YEAR    DATA_MONTH    DATA_DAY    DATA_ORDER    DATA_USEFLAG    DATA_DELFLAG    DATA_VCODE    单位全称    数据年度    数据季度    参评类型    利润比先进    利润比进步    利润比贡献    单位操作成本比先进    单位操作成本比进步    单位操作成本比贡献    原油产量比先进    原油产量比进步    原油产量比贡献    天然气产量比先进    天然气产量比进步    天然气产量比贡献    单位综合能耗比先进    单位综合能耗比进步    单位综合能耗比贡献    利润比先进得分    利润比进步得分    利润比贡献得分    单位操作成本比先进得分    单位操作成本比进步得分    单位操作成本比贡献得分    原油产量比先进得分    原油产量比进步得分    原油产量比贡献得分    天然气产量比先进得分    天然气产量比进步得分    天然气产量比贡献得分    单位综合能耗比先进得分    单位综合能耗比进步得分    单位综合能耗比贡献得分    利润得分    单位操作成本得分    原油产量得分    天然气产量得分    单位综合能耗得分    三项指标总得分    数据锁值    最后修改人员    最后修改时间<br>0BFDA3E7-BABB-4251-A182-03ED20DAD316    1    三项指标    FLC    1    2017    12    12    23059539.0350    1    0        胜利油田分公司胜利采油厂    2017        采油厂    109.9959    108.3584    1234    894    -6.8790    2    114.9701    14.4902    25                            40    40    19.60    39.20    39.20    19.60    40    40    20                            99.60    98    100            99.173333333333        admin    2017-12-12</p><p>查询成3行数据</p><table><thead><tr><th style="text-align:center">CODE_NM</th><th style="text-align:center">比先进</th><th style="text-align:center">比进步</th><th style="text-align:center">比贡献</th><th style="text-align:center">得分</th></tr></thead><tbody><tr><td style="text-align:center">利润分值</td><td style="text-align:center">109.9959#100#40</td><td style="text-align:center">108.3584#100#40</td><td style="text-align:center">2#98#19.6</td><td style="text-align:center">2#98#19.6</td></tr><tr><td style="text-align:center">单位操作成本分值</td><td style="text-align:center">2#98#19.6</td><td style="text-align:center">2#98#19.6</td><td style="text-align:center">2#98#19.6</td><td style="text-align:center">2#98#19.6</td></tr><tr><td style="text-align:center">原油产量分值</td><td style="text-align:center">2#98#19.6</td><td style="text-align:center">2#98#19.6</td><td style="text-align:center">2#98#19.6</td><td style="text-align:center">2#98#19.6</td></tr><tr><td style="text-align:center">平均得分</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">99.173333333333</td></tr></tbody></table><figure class="highlight sql"><figcaption><span>[]</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">A .CODE_NM,</span><br><span class="line">b.比先进,</span><br><span class="line">b.比进步,</span><br><span class="line">b.比贡献,</span><br><span class="line">b.得分</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">ROWNUM</span> rn,</span><br><span class="line">CODE_NM</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">CODE_NM,</span><br><span class="line">CODE_ORDER</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">CODE_NM,</span><br><span class="line">CODE_ORDER</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">SYS_CODE</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">CODE_TIME = <span class="string">'2017'</span></span><br><span class="line"><span class="keyword">AND</span> CODE_KIND = <span class="string">'三项权重信息'</span></span><br><span class="line"><span class="keyword">AND</span> CODE_VCODE = <span class="string">'采油厂'</span></span><br><span class="line"><span class="keyword">AND</span> CODE_NM <span class="keyword">LIKE</span> <span class="string">'%分值'</span></span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="string">'平均得分'</span> CODE_NM,</span><br><span class="line"><span class="number">999999999</span> CODE_ORDER</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">dual</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line"><span class="keyword">ROWNUM</span> = <span class="number">1</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">code_order</span><br><span class="line">)</span><br><span class="line">) A,</span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">ROWNUM</span> rn,</span><br><span class="line">比先进,</span><br><span class="line">比进步,</span><br><span class="line">比贡献,</span><br><span class="line">得分</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="number">1</span>,</span><br><span class="line">利润比先进||<span class="string">'#'</span>||利润比先进得分/<span class="number">0.4</span>||<span class="string">'#'</span>||利润比先进得分 比先进,</span><br><span class="line">利润比进步||<span class="string">'#'</span>||利润比进步得分/<span class="number">0.4</span>||<span class="string">'#'</span>||利润比进步得分 比进步,</span><br><span class="line">利润比贡献||<span class="string">'#'</span>||利润比贡献得分/<span class="number">0.2</span>||<span class="string">'#'</span>||利润比贡献得分 比贡献,</span><br><span class="line">利润得分 得分</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">V_SXZB3727470703</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">单位全称 = <span class="string">'胜利油田分公司胜利采油厂'</span></span><br><span class="line"><span class="keyword">AND</span> 数据年度 = <span class="string">'2017'</span></span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="number">2</span>,</span><br><span class="line">单位操作成本比先进||<span class="string">'#'</span>||单位操作成本比先进得分/<span class="number">0.4</span>||<span class="string">'#'</span>||单位操作成本比先进得分 比先进,</span><br><span class="line">单位操作成本比进步||<span class="string">'#'</span>||单位操作成本比进步得分/<span class="number">0.4</span>||<span class="string">'#'</span>|| 单位操作成本比进步得分,</span><br><span class="line">单位操作成本比贡献||<span class="string">'#'</span>||单位操作成本比贡献得分/<span class="number">0.2</span>||<span class="string">'#'</span>|| 单位操作成本比贡献得分,</span><br><span class="line">单位操作成本得分 得分</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">V_SXZB3727470703</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">单位全称 = <span class="string">'胜利油田分公司胜利采油厂'</span></span><br><span class="line"><span class="keyword">AND</span> 数据年度 = <span class="string">'2017'</span></span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="number">3</span>,</span><br><span class="line">原油产量比先进||<span class="string">'#'</span>||原油产量比先进得分/<span class="number">0.4</span>||<span class="string">'#'</span>||原油产量比先进得分 比先进,</span><br><span class="line">原油产量比进步||<span class="string">'#'</span>||原油产量比进步得分/<span class="number">0.4</span>||<span class="string">'#'</span>||原油产量比进步得分 比进步,</span><br><span class="line">原油产量比贡献||<span class="string">'#'</span>||原油产量比贡献得分/<span class="number">0.2</span>||<span class="string">'#'</span>||原油产量比贡献得分 比贡献,</span><br><span class="line">原油产量得分 得分</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">V_SXZB3727470703</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">单位全称 = <span class="string">'胜利油田分公司胜利采油厂'</span></span><br><span class="line"><span class="keyword">AND</span> 数据年度 = <span class="string">'2017'</span></span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="number">4</span>,</span><br><span class="line"><span class="literal">NULL</span> 比先进 ,</span><br><span class="line"><span class="literal">NULL</span> 比进步 ,</span><br><span class="line"><span class="literal">NULL</span> 比贡献 ,</span><br><span class="line">三项指标总得分 得分</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">V_SXZB3727470703</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">单位全称 = <span class="string">'胜利油田分公司胜利采油厂'</span></span><br><span class="line"><span class="keyword">AND</span> 数据年度 = <span class="string">'2017'</span></span><br><span class="line">) 　</span><br><span class="line">) b</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">A .rn = b.rn</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;使用时间戳去查询某个时间的数据库里的数据&quot;&gt;&lt;a href=&quot;#使用时间戳去查询某个时间的数据库里的数据&quot; class=&quot;headerlink&quot; title=&quot;使用时间戳去查询某个时间的数据库里的数据&quot;&gt;&lt;/a&gt;使用时间戳去查询某个时间的数据库里的数据&lt;/h3&gt;&lt;
      
    
    </summary>
    
      <category term="oracle" scheme="http://youhanghang.com/categories/oracle/"/>
    
    
      <category term="oracle" scheme="http://youhanghang.com/tags/oracle/"/>
    
  </entry>
  
  <entry>
    <title>写博客常用</title>
    <link href="http://youhanghang.com/2018/10/29/%E5%86%99%E5%8D%9A%E5%AE%A2%E5%B8%B8%E7%94%A8/"/>
    <id>http://youhanghang.com/2018/10/29/写博客常用/</id>
    <published>2018-10-29T09:00:12.950Z</published>
    <updated>2017-11-11T09:55:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="js表单验证大全"><a href="#js表单验证大全" class="headerlink" title="js表单验证大全"></a><a href="https://www.baidu.com/s?wd=js表单验证大全" target="_blank" rel="noopener">js表单验证大全</a></h2><h3 id="测试代码高亮"><a href="#测试代码高亮" class="headerlink" title="测试代码高亮"></a>测试代码高亮</h3><figure class="highlight css"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-高亮一段代码-code"><a href="#3-高亮一段代码-code" class="headerlink" title="3. 高亮一段代码[^code]"></a>3. 高亮一段代码[^code]</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@requires_authorization</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># A comment</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'hello world'</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;js表单验证大全&quot;&gt;&lt;a href=&quot;#js表单验证大全&quot; class=&quot;headerlink&quot; title=&quot;js表单验证大全&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.baidu.com/s?wd=js表单验证大全&quot; target=&quot;_blank&quot; 
      
    
    </summary>
    
      <category term="前端" scheme="http://youhanghang.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="其他" scheme="http://youhanghang.com/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>事件委托</title>
    <link href="http://youhanghang.com/2018/10/29/%E4%BA%8B%E4%BB%B6%E5%A7%94%E6%89%98/"/>
    <id>http://youhanghang.com/2018/10/29/事件委托/</id>
    <published>2018-10-29T09:00:12.920Z</published>
    <updated>2018-04-22T07:32:34.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.baidu.com/s?wd=事件委托" target="_blank" rel="noopener">百度搜索事件委托</a><br>实验室有事件委托例子<br>什么是事件委托？<br>事件委托——给父元素绑定事件，用来监听子元素的冒泡事件，并找到是哪个子元素的事件。<br>好处：避免对每个字元素添加事件监听器，减少操作DOM节点的次数，从而减少浏览器的重绘和重排，提高代码的性能。</p><h3 id="jquery事件委托"><a href="#jquery事件委托" class="headerlink" title="jquery事件委托"></a>jquery事件委托</h3><p>e.target  产生事件的元素对象，例如直接被点击的元素<br>e.currentTarget 处理事件的当前元素对象，也就是当前事件函数里的this<br>为ul绑定事件，e为ul事件对象<br>点击li，e.target为li,e.currentTarget为ul，e.target!=e.currentTarget<br>点击ul，e.target为ul,e.currentTarget为ul，e.target==e.currentTarget<br><figure class="highlight javascript"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line">&lt;!-- </span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span>&gt;</span>测试1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">        &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span>&gt;</span>测试2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">        &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span>&gt;</span>测试3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">        &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span>&gt;</span>测试4<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">        &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span>&gt;</span>测试5<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">        &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span>&gt;</span>测试6<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">        &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span>&gt;</span>测试7<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">        &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span>&gt;</span>测试8<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">    &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt; </span><br><span class="line">--&gt;</span><br><span class="line">$(<span class="string">"ul"</span>).on(<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">"点击的内容是："</span>+$(e.target).text());</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h3 id="js事件委托"><a href="#js事件委托" class="headerlink" title="js事件委托"></a>js事件委托</h3><figure class="highlight javascript"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line">&lt;!-- </span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span>&gt;</span>测试1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">        &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span>&gt;</span>测试2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">        &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span>&gt;</span>测试3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">        &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span>&gt;</span>测试4<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">        &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span>&gt;</span>测试5<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">        &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span>&gt;</span>测试6<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">        &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span>&gt;</span>测试7<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">        &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span>&gt;</span>测试8<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">    &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line"> --&gt;</span><br><span class="line"><span class="built_in">document</span>.getElementsByTagName(<span class="string">"ul"</span>)[<span class="number">0</span>].addEventListener(<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">"点击的内容是："</span>+e.target.innerHTML);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.baidu.com/s?wd=事件委托&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;百度搜索事件委托&lt;/a&gt;&lt;br&gt;实验室有事件委托例子&lt;br&gt;什么是事件委托？&lt;br&gt;事件委托——给父元素绑定事件，用来监听子元素
      
    
    </summary>
    
      <category term="前端" scheme="http://youhanghang.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="js，jquery" scheme="http://youhanghang.com/tags/js%EF%BC%8Cjquery/"/>
    
  </entry>
  
  <entry>
    <title>webpack学习(一)</title>
    <link href="http://youhanghang.com/2018/10/29/webpack/"/>
    <id>http://youhanghang.com/2018/10/29/webpack/</id>
    <published>2018-10-29T09:00:12.890Z</published>
    <updated>2018-01-09T07:19:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="百度搜索webpack"><a href="#百度搜索webpack" class="headerlink" title="百度搜索webpack"></a><a href="https://www.baidu.com/s?wd=webpack" target="_blank" rel="noopener">百度搜索webpack</a></h2><h2 id="入门Webpack，看这篇就够了"><a href="#入门Webpack，看这篇就够了" class="headerlink" title="入门Webpack，看这篇就够了"></a><a href="https://www.jianshu.com/p/42e11515c10f" target="_blank" rel="noopener">入门Webpack，看这篇就够了</a></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;百度搜索webpack&quot;&gt;&lt;a href=&quot;#百度搜索webpack&quot; class=&quot;headerlink&quot; title=&quot;百度搜索webpack&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.baidu.com/s?wd=webpack&quot; target=&quot;
      
    
    </summary>
    
      <category term="前端" scheme="http://youhanghang.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="webpack" scheme="http://youhanghang.com/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>学习markdown写法</title>
    <link href="http://youhanghang.com/2018/10/29/markdown%E8%AF%AD%E6%B3%95/"/>
    <id>http://youhanghang.com/2018/10/29/markdown语法/</id>
    <published>2018-10-29T09:00:12.860Z</published>
    <updated>2017-12-18T09:27:32.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="欢迎使用-Cmd-Markdown-编辑阅读器"><a href="#欢迎使用-Cmd-Markdown-编辑阅读器" class="headerlink" title="欢迎使用 Cmd Markdown 编辑阅读器"></a>欢迎使用 Cmd Markdown 编辑阅读器</h1><hr><p>半方大的空白&ensp;或&#8194;<br>全方大的空白&emsp;或&#8195;<br>不断行的空白格&nbsp;或&#160;</p><p>我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，<strong>Cmd Markdown</strong> 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown：</p><blockquote><ul><li>整理知识，学习笔记</li><li>发布日记，杂文，所见所想</li><li>撰写发布技术文稿（代码支持）</li><li>撰写发布学术论文（LaTeX 公式支持）</li></ul></blockquote><p><img src="https://www.zybuluo.com/static/img/logo.png" alt="cmd-markdown-logo"></p><p>除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载：</p><h3 id="Windows-Mac-Linux-全平台客户端"><a href="#Windows-Mac-Linux-全平台客户端" class="headerlink" title="Windows/Mac/Linux 全平台客户端"></a><a href="https://www.zybuluo.com/cmd/" target="_blank" rel="noopener">Windows/Mac/Linux 全平台客户端</a></h3><blockquote><p>请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 <i class="icon-file"></i> <strong>新文稿</strong> 或者使用快捷键 <code>Ctrl+Alt+N</code>。</p></blockquote><hr><h2 id="什么是-Markdown"><a href="#什么是-Markdown" class="headerlink" title="什么是 Markdown"></a>什么是 Markdown</h2><p>Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong> 或者 <em>斜体</em> 某些文字，更棒的是，它还可以</p><h3 id="1-制作一份待办事宜-Todo-列表"><a href="#1-制作一份待办事宜-Todo-列表" class="headerlink" title="1. 制作一份待办事宜 Todo 列表"></a>1. 制作一份待办事宜 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#13-待办事宜-todo-列表" target="_blank" rel="noopener">Todo 列表</a></h3><ul><li>[ ] 支持以 PDF 格式导出文稿</li><li>[ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率</li><li>[x] 新增 Todo 列表功能</li><li>[x] 修复 LaTex 公式渲染问题</li><li>[x] 新增 LaTex 公式编号功能</li></ul><h3 id="2-书写一个质能守恒公式-LaTeX"><a href="#2-书写一个质能守恒公式-LaTeX" class="headerlink" title="2. 书写一个质能守恒公式[^LaTeX]"></a>2. 书写一个质能守恒公式[^LaTeX]</h3><p>$$E=mc^2$$</p><h3 id="3-高亮一段代码-code"><a href="#3-高亮一段代码-code" class="headerlink" title="3. 高亮一段代码[^code]"></a>3. 高亮一段代码[^code]</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@requires_authorization</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># A comment</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'hello world'</span></span><br></pre></td></tr></table></figure><h3 id="4-高效绘制-流程图"><a href="#4-高效绘制-流程图" class="headerlink" title="4. 高效绘制 流程图"></a>4. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-流程图" target="_blank" rel="noopener">流程图</a></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">st=&gt;start: Start</span><br><span class="line">op=&gt;operation: Your Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line">e=&gt;end</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure><h3 id="5-高效绘制-序列图"><a href="#5-高效绘制-序列图" class="headerlink" title="5. 高效绘制 序列图"></a>5. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#8-序列图" target="_blank" rel="noopener">序列图</a></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Alice-&gt;Bob: Hello Bob, how are you?</span><br><span class="line">Note right of Bob: Bob thinks</span><br><span class="line">Bob--&gt;Alice: I am good thanks!</span><br></pre></td></tr></table></figure><h3 id="6-高效绘制-甘特图"><a href="#6-高效绘制-甘特图" class="headerlink" title="6. 高效绘制 甘特图"></a>6. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#9-甘特图" target="_blank" rel="noopener">甘特图</a></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title 项目开发流程</span><br><span class="line">section 项目确定</span><br><span class="line">    需求分析       :a1, 2016-06-22, 3d</span><br><span class="line">    可行性报告     :after a1, 5d</span><br><span class="line">    概念验证       : 5d</span><br><span class="line">section 项目实施</span><br><span class="line">    概要设计      :2016-07-05  , 5d</span><br><span class="line">    详细设计      :2016-07-08, 10d</span><br><span class="line">    编码          :2016-07-15, 10d</span><br><span class="line">    测试          :2016-07-22, 5d</span><br><span class="line">section 发布验收</span><br><span class="line">    发布: 2d</span><br><span class="line">    验收: 3d</span><br></pre></td></tr></table></figure><h3 id="7-绘制表格"><a href="#7-绘制表格" class="headerlink" title="7. 绘制表格"></a>7. 绘制表格</h3><p>注意：<span style="color: red;">表格上下要有空行，不然编译不出来</span><br>:- 默认左对齐<br>-:右对齐<br>:-:居中</p><table><thead><tr><th>项目</th><th style="text-align:right">价格</th><th style="text-align:center">数量</th></tr></thead><tbody><tr><td>计算机</td><td style="text-align:right">\$1600</td><td style="text-align:center">5</td></tr><tr><td>手机</td><td style="text-align:right">\$12</td><td style="text-align:center">12</td></tr><tr><td>管线</td><td style="text-align:right">\$1</td><td style="text-align:center">234</td></tr></tbody></table><table><thead><tr><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><h3 id="8-更详细语法说明"><a href="#8-更详细语法说明" class="headerlink" title="8. 更详细语法说明"></a>8. 更详细语法说明</h3><p>想要查看更详细的语法说明，可以参考我们准备的 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown" target="_blank" rel="noopener">Cmd Markdown 简明语法手册</a>，进阶用户可以参考 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#cmd-markdown-高阶语法手册" target="_blank" rel="noopener">Cmd Markdown 高阶语法手册</a> 了解更多高级功能。</p><p>总而言之，不同于其它 <em>所见即所得</em> 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。<strong>Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。</strong> 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。</p><hr><h2 id="什么是-Cmd-Markdown"><a href="#什么是-Cmd-Markdown" class="headerlink" title="什么是 Cmd Markdown"></a>什么是 Cmd Markdown</h2><p>您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 <strong>编辑/发布/阅读</strong> Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。</p><h3 id="1-实时同步预览"><a href="#1-实时同步预览" class="headerlink" title="1. 实时同步预览"></a>1. 实时同步预览</h3><p>我们将 Cmd Markdown 的主界面一分为二，左边为<strong>编辑区</strong>，右边为<strong>预览区</strong>，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！</p><h3 id="2-编辑工具栏"><a href="#2-编辑工具栏" class="headerlink" title="2. 编辑工具栏"></a>2. 编辑工具栏</h3><p>也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 <strong>编辑区</strong> 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。</p><p><img src="https://www.zybuluo.com/static/img/toolbar-editor.png" alt="tool-editor"></p><h3 id="3-编辑模式"><a href="#3-编辑模式" class="headerlink" title="3. 编辑模式"></a>3. 编辑模式</h3><p>完全心无旁骛的方式编辑文字：点击 <strong>编辑工具栏</strong> 最右侧的拉伸按钮或者按下 <code>Ctrl + M</code>，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！</p><h3 id="4-实时的云端文稿"><a href="#4-实时的云端文稿" class="headerlink" title="4. 实时的云端文稿"></a>4. 实时的云端文稿</h3><p>为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 <strong>编辑工具栏</strong> 的最右侧提示 <code>已保存</code> 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。</p><h3 id="5-离线模式"><a href="#5-离线模式" class="headerlink" title="5. 离线模式"></a>5. 离线模式</h3><p>在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。</p><h3 id="6-管理工具栏"><a href="#6-管理工具栏" class="headerlink" title="6. 管理工具栏"></a>6. 管理工具栏</h3><p>为了便于管理您的文稿，在 <strong>预览区</strong> 的顶部放置了如下所示的 <strong>管理工具栏</strong>：</p><p><img src="https://www.zybuluo.com/static/img/toolbar-manager.jpg" alt="tool-manager"></p><p>通过管理工具栏可以：</p><p><i class="icon-share"></i> 发布：将当前的文稿生成固定链接，在网络上发布，分享<br><i class="icon-file"></i> 新建：开始撰写一篇新的文稿<br><i class="icon-trash"></i> 删除：删除当前的文稿<br><i class="icon-cloud"></i> 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地<br><i class="icon-reorder"></i> 列表：所有新增和过往的文稿都可以在这里查看、操作<br><i class="icon-pencil"></i> 模式：切换 普通/Vim/Emacs 编辑模式</p><h3 id="7-阅读工具栏"><a href="#7-阅读工具栏" class="headerlink" title="7. 阅读工具栏"></a>7. 阅读工具栏</h3><p><img src="https://www.zybuluo.com/static/img/toolbar-reader.jpg" alt="tool-manager"></p><p>通过 <strong>预览区</strong> 右上角的 <strong>阅读工具栏</strong>，可以查看当前文稿的目录并增强阅读体验。</p><p>工具栏上的五个图标依次为：</p><p><i class="icon-list"></i> 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落<br><i class="icon-chevron-sign-left"></i> 视图：互换左边编辑区和右边预览区的位置<br><i class="icon-adjust"></i> 主题：内置了黑白两种模式的主题，试试 <strong>黑色主题</strong>，超炫！<br><i class="icon-desktop"></i> 阅读：心无旁骛的阅读模式提供超一流的阅读体验<br><i class="icon-fullscreen"></i> 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境</p><h3 id="8-阅读模式"><a href="#8-阅读模式" class="headerlink" title="8. 阅读模式"></a>8. 阅读模式</h3><p>在 <strong>阅读工具栏</strong> 点击 <i class="icon-desktop"></i> 或者按下 <code>Ctrl+Alt+M</code> 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。</p><h3 id="9-标签、分类和搜索"><a href="#9-标签、分类和搜索" class="headerlink" title="9. 标签、分类和搜索"></a>9. 标签、分类和搜索</h3><p>在编辑区任意行首位置输入以下格式的文字可以标签当前文档：</p><p>标签： 未分类</p><p>标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示：</p><p><img src="https://www.zybuluo.com/static/img/file-list.png" alt="file-list"></p><h3 id="10-文稿发布和分享"><a href="#10-文稿发布和分享" class="headerlink" title="10. 文稿发布和分享"></a>10. 文稿发布和分享</h3><p>在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 <i class="icon-share"></i> (Ctrl+Alt+P) 发布这份文档给好友吧！</p><hr><p>再一次感谢您花费时间阅读这份欢迎稿，点击 <i class="icon-file"></i> (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！</p><p>作者 <a href="http://weibo.com/ghosert" target="_blank" rel="noopener">@ghosert</a><br>2016 年 07月 07日    </p><p>[^LaTeX]: 支持 <strong>LaTeX</strong> 编辑显示支持，例如：$\sum_{i=1}^n a_i=0$， 访问 <a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="noopener">MathJax</a> 参考更多使用方法。</p><p>[^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，<strong>四十一</strong>种主流编程语言。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;欢迎使用-Cmd-Markdown-编辑阅读器&quot;&gt;&lt;a href=&quot;#欢迎使用-Cmd-Markdown-编辑阅读器&quot; class=&quot;headerlink&quot; title=&quot;欢迎使用 Cmd Markdown 编辑阅读器&quot;&gt;&lt;/a&gt;欢迎使用 Cmd Markdown
      
    
    </summary>
    
      <category term="其他技术" scheme="http://youhanghang.com/categories/%E5%85%B6%E4%BB%96%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="markdown" scheme="http://youhanghang.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>js计算</title>
    <link href="http://youhanghang.com/2018/10/29/js%E8%AE%A1%E7%AE%97/"/>
    <id>http://youhanghang.com/2018/10/29/js计算/</id>
    <published>2018-10-29T09:00:12.840Z</published>
    <updated>2017-12-14T07:23:18.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="js字符串常用函数"><a href="#js字符串常用函数" class="headerlink" title="js字符串常用函数"></a>js字符串常用函数</h3><figure class="highlight javascript"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="js加减乘除"><a href="#js加减乘除" class="headerlink" title="js加减乘除"></a>js加减乘除</h3><figure class="highlight javascript"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">//加    </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">floatAdd</span>(<span class="params">arg1, arg2</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> r1, r2, m;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    r1 = arg1.toString().split(<span class="string">"."</span>)[<span class="number">1</span>].length</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    r1 = <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    r2 = arg2.toString().split(<span class="string">"."</span>)[<span class="number">1</span>].length</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    r2 = <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">  m = <span class="built_in">Math</span>.pow(<span class="number">10</span>, <span class="built_in">Math</span>.max(r1, r2));</span><br><span class="line">  <span class="keyword">return</span> (arg1 * m + arg2 * m) / m;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//减    </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">floatSub</span>(<span class="params">arg1, arg2</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> r1, r2, m, n;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    r1 = arg1.toString().split(<span class="string">"."</span>)[<span class="number">1</span>].length</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    r1 = <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    r2 = arg2.toString().split(<span class="string">"."</span>)[<span class="number">1</span>].length</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    r2 = <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">  m = <span class="built_in">Math</span>.pow(<span class="number">10</span>, <span class="built_in">Math</span>.max(r1, r2));</span><br><span class="line">  <span class="comment">//动态控制精度长度    </span></span><br><span class="line">  n = (r1 &gt;= r2) ? r1 : r2;</span><br><span class="line">  <span class="keyword">return</span> ((arg1 * m - arg2 * m) / m).toFixed(n);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//乘    </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">floatMul</span>(<span class="params">arg1, arg2</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> m = <span class="number">0</span>,</span><br><span class="line">    s1 = arg1.toString(),</span><br><span class="line">    s2 = arg2.toString();</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    m += s1.split(<span class="string">"."</span>)[<span class="number">1</span>].length</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123; &#125;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    m += s2.split(<span class="string">"."</span>)[<span class="number">1</span>].length</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123; &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Number</span>(s1.replace(<span class="string">"."</span>, <span class="string">""</span>)) * <span class="built_in">Number</span>(s2.replace(<span class="string">"."</span>, <span class="string">""</span>)) / <span class="built_in">Math</span>.pow(<span class="number">10</span>, m);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//除   </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">floatDiv</span>(<span class="params">arg1, arg2</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> t1 = <span class="number">0</span>,</span><br><span class="line">    t2 = <span class="number">0</span>,</span><br><span class="line">    r1, r2;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    t1 = arg1.toString().split(<span class="string">"."</span>)[<span class="number">1</span>].length</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123; &#125;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    t2 = arg2.toString().split(<span class="string">"."</span>)[<span class="number">1</span>].length</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123; &#125;</span><br><span class="line"></span><br><span class="line">  r1 = <span class="built_in">Number</span>(arg1.toString().replace(<span class="string">"."</span>, <span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">  r2 = <span class="built_in">Number</span>(arg2.toString().replace(<span class="string">"."</span>, <span class="string">""</span>));</span><br><span class="line">  <span class="keyword">return</span> (r1 / r2) * <span class="built_in">Math</span>.pow(<span class="number">10</span>, t2 - t1);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;js字符串常用函数&quot;&gt;&lt;a href=&quot;#js字符串常用函数&quot; class=&quot;headerlink&quot; title=&quot;js字符串常用函数&quot;&gt;&lt;/a&gt;js字符串常用函数&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;figcapt
      
    
    </summary>
    
      <category term="前端" scheme="http://youhanghang.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="js" scheme="http://youhanghang.com/tags/js/"/>
    
      <category term="js计算" scheme="http://youhanghang.com/tags/js%E8%AE%A1%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>js常用日期函数</title>
    <link href="http://youhanghang.com/2018/10/29/js%E6%97%A5%E6%9C%9F%E5%87%BD%E6%95%B0/"/>
    <id>http://youhanghang.com/2018/10/29/js日期函数/</id>
    <published>2018-10-29T09:00:12.810Z</published>
    <updated>2018-01-09T07:24:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="js常用日期函数"><a href="#js常用日期函数" class="headerlink" title="js常用日期函数"></a><a href="https://www.baidu.com/s?wd=js常用日期函数" target="_blank" rel="noopener">js常用日期函数</a></h2><h3 id="js常用日期函数-1"><a href="#js常用日期函数-1" class="headerlink" title="js常用日期函数"></a>js常用日期函数</h3><figure class="highlight javascript"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> 取得当前时间：</span><br><span class="line"><span class="keyword">var</span> date=<span class="keyword">new</span> <span class="built_in">Date</span>(); </span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 比较两日期相差的天数是否大于<span class="number">5</span>：</span><br><span class="line"><span class="built_in">parseInt</span>((date1-date2) / (<span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span>)) &gt; <span class="number">5</span> </span><br><span class="line"></span><br><span class="line"><span class="number">3.</span> 比较两个时间：</span><br><span class="line"><span class="keyword">if</span>(date1.valueOf()&gt;date2.valueOf()) </span><br><span class="line">&#123; </span><br><span class="line">alert(<span class="string">"输入日期不得小于当前日期！"</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123; </span><br><span class="line">alert(<span class="string">"OK!"</span>); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="number">4.</span> 取得当前时间的时分秒</span><br><span class="line"><span class="keyword">var</span> today=<span class="keyword">new</span> <span class="built_in">Date</span>(); </span><br><span class="line"><span class="keyword">var</span> year=today.getFullYear(); </span><br><span class="line"><span class="keyword">var</span> month=today.getMonth()+<span class="number">1</span>; </span><br><span class="line"><span class="keyword">var</span> day=today.getDate(); </span><br><span class="line"><span class="keyword">var</span> hour=today.getHours(); </span><br><span class="line"><span class="keyword">var</span> minute=today.getMinutes(); </span><br><span class="line"><span class="keyword">var</span> second=today.getSeconds(); </span><br><span class="line"></span><br><span class="line"><span class="number">5.</span> 时间相加：取得固定时间（<span class="number">2006</span>年<span class="number">8</span>月<span class="number">12</span>日）<span class="number">35</span>天之后的时间</span><br><span class="line"><span class="keyword">var</span> date =<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">"2006，7，12"</span>); </span><br><span class="line">date.setDate(date.getDate()+<span class="number">35</span>); </span><br><span class="line"></span><br><span class="line"><span class="number">6.</span> <span class="built_in">Date</span>对象的方法</span><br><span class="line"></span><br><span class="line">　<span class="built_in">Date</span> 对象能够使你获得相对于国际标准时间（格林威治标准时间，现在被称为 UTC-Universal Coordinated Time）。要使用<span class="built_in">Date</span>对象的方法，你就必须先创建一个<span class="built_in">Date</span>对象的实体（Instance）。 </span><br><span class="line"></span><br><span class="line">　　<span class="built_in">Date</span> 对象的方法并不是静态的，但是在使用时却可以应用于所指定的单独实体。 </span><br><span class="line"></span><br><span class="line">　　<span class="built_in">Date</span> 对象的方法简介： </span><br><span class="line"></span><br><span class="line">　　·getDate　　　　　　｜　根据本地时间获取当前日期(本月的几号) </span><br><span class="line">　　·getDay　　 　　　　｜　根据本地时间获取今天是星期几(<span class="number">0</span>-Sunday,<span class="number">1</span>-Monday...) </span><br><span class="line">　　·getFullYear　　　　｜　根据本地时间获取当前年份(四位数字) </span><br><span class="line">　　·getHours　　 　　　｜　根据本地时间获取当前小时数(<span class="number">24</span>小时制,<span class="number">0</span><span class="number">-23</span>) </span><br><span class="line">　　·getMilliseconds　　｜　根据本地时间获取当前毫秒数 </span><br><span class="line">　　·getMinutes　　　 　｜　根据本地时间获取当前分钟数 </span><br><span class="line">　　·getMonth　　　　 　｜　根据本地时间获取当前月份(注意从<span class="number">0</span>开始:<span class="number">0</span>-Jan,<span class="number">1</span>-Feb...) </span><br><span class="line">　　·getSeconds　　　 　｜　根据本地时间获取当前秒数 </span><br><span class="line">　　·getTime　　　　　　｜　获取UTC格式的从<span class="number">1970.1</span><span class="number">.1</span> <span class="number">0</span>:<span class="number">00</span>以来的毫秒数 </span><br><span class="line">　　·getTimezoneOffset　｜　获取当前时间和UTC格式的偏移值(以分钟为单位) </span><br><span class="line">　　·getUTCDate　　　　 ｜　获取UTC格式的当前日期(本月的几号) </span><br><span class="line">　　·getUTCDay　　　　　｜　获取UTC格式的今天是星期几(<span class="number">0</span>-Sunday,<span class="number">1</span>-Monday...) </span><br><span class="line">　　·getUTCFullYear　　 ｜　获取UTC格式的当前年份(四位数字) </span><br><span class="line">　　·getUTCHours　　　　｜　获取UTC格式的当前小时数(<span class="number">24</span>小时制,<span class="number">0</span><span class="number">-23</span>) </span><br><span class="line">　　·getUTCMilliseconds ｜　获取UTC格式的当前毫秒数 </span><br><span class="line">　　·getUTCMinutes　　　｜　获取UTC格式的当前分钟数 </span><br><span class="line">　　·getUTCMonth　　　　｜　获取UTC格式的当前月份(注意从<span class="number">0</span>开始:<span class="number">0</span>-Jan,<span class="number">1</span>-Feb...) </span><br><span class="line">　　·getUTCSeconds　　　｜　获取UTC格式的当前秒数 </span><br><span class="line">　　·getYear　　　　　　｜　根据本地时间获取当前缩写年份(当前年份减去<span class="number">1900</span>) </span><br><span class="line">　　·setDate　　　　　　｜　设置当前日期(本月的几号) </span><br><span class="line">　　·setFullYear　　　　｜　设置当前年份(四位数字) </span><br><span class="line">　　·setHours　　　　　 ｜　设置当前小时数(<span class="number">24</span>小时制,<span class="number">0</span><span class="number">-23</span>) </span><br><span class="line">　　·setMilliseconds　　｜　设置当前毫秒数 </span><br><span class="line">　　·setMinutes　　　　 ｜　设置当前分钟数 </span><br><span class="line">　　·setMonth　　　　　 ｜　设置当前月份(注意从<span class="number">0</span>开始:<span class="number">0</span>-Jan,<span class="number">1</span>-Feb...) </span><br><span class="line"></span><br><span class="line">　　·setSeconds　　　　 ｜　设置当前秒数 </span><br><span class="line">　　·setTime　　　　　　｜　设置UTC格式的从<span class="number">1970.1</span><span class="number">.1</span> <span class="number">0</span>:<span class="number">00</span>以来的毫秒数 </span><br><span class="line">　　·setUTCDate　　　　 ｜　设置UTC格式的当前日期(本月的几号) </span><br><span class="line">　　·setUTCFullYear　　 ｜　设置UTC格式的当前年份(四位数字) </span><br><span class="line">　　·setUTCHours　　　　｜　设置UTC格式的当前小时数(<span class="number">24</span>小时制,<span class="number">0</span><span class="number">-23</span>) </span><br><span class="line">　　·setUTCMilliseconds ｜　设置UTC格式的当前毫秒数 </span><br><span class="line">　　·setUTCMinutes　　　｜　设置UTC格式的当前分钟数 </span><br><span class="line">　　·setUTCMonth　　　　｜　设置UTC格式的当前月份(注意从<span class="number">0</span>开始:<span class="number">0</span>-Jan,<span class="number">1</span>-Feb...) </span><br><span class="line">　　·setUTCSeconds　　　｜　设置UTC格式的当前秒数 </span><br><span class="line">　　·setYear　　　　　　｜　设置当前缩写年份(当前年份减去<span class="number">1900</span>) </span><br><span class="line">　　·toString　　　　　 ｜　将日期时间值转换成<span class="string">"日期/时间"</span>形式的字符串值 </span><br><span class="line">　　·<span class="built_in">Date</span>.UTC　　　　　 ｜　返回指定的UTC格式日期时间的固定时间值 </span><br><span class="line"></span><br><span class="line"><span class="number">7.</span> 创建新的 <span class="built_in">Date</span> 对象 </span><br><span class="line">　　语法： </span><br><span class="line">　　　<span class="keyword">new</span> <span class="built_in">Date</span>(); </span><br><span class="line">　　　<span class="keyword">new</span> <span class="built_in">Date</span>(year [, month [, date [, hour [, minute [, second [, millisecond ]]]]]] ); </span><br><span class="line">　　参数： </span><br><span class="line">　　　year 　　　　是一个 <span class="number">0</span> 到 <span class="number">99</span> 之间的整数，对应于 <span class="number">1900</span> 到 <span class="number">1999</span> 年，或者为四位数字指定确定的年份； </span><br><span class="line">　　　month　　　　是一个 <span class="number">0</span> (一月) 到 <span class="number">11</span> (十二月) 之间的整数，这个参数是可选的； </span><br><span class="line">　　　date　 　　　是一个 <span class="number">1</span> 到 <span class="number">31</span> 之间的整数，这个参数是可选的； </span><br><span class="line">　　　hour 　　　　是一个 <span class="number">0</span> (<span class="number">0</span>:<span class="number">00</span>am) 到 <span class="number">23</span> (<span class="number">11</span>:<span class="number">00</span>pm) 之间的整数，这个参数是可选的； </span><br><span class="line">　　　minute 　　　是一个 <span class="number">0</span> 到 <span class="number">59</span> 之间的整数，这个参数是可选的； </span><br><span class="line">　　　second 　　　是一个 <span class="number">0</span> 到 <span class="number">59</span> 之间的整数，这个参数是可选的； </span><br><span class="line">　　　millisecond　是一个 <span class="number">0</span> 到 <span class="number">999</span> 之间的整数，这个参数是可选的； </span><br><span class="line">　　注释： </span><br><span class="line">　　　对象。新建一个 <span class="built_in">Date</span> 对象。 </span><br><span class="line">　　例子： </span><br><span class="line">　　　下面是获得当前日期和时间的例子： </span><br><span class="line">　　　　now = <span class="keyword">new</span> <span class="built_in">Date</span>(); </span><br><span class="line">　　　下面创建一个关于国庆节的 <span class="built_in">Date</span> 对象的例子： </span><br><span class="line">　　　　national_day = <span class="keyword">new</span> <span class="built_in">Date</span> (<span class="number">49</span>, <span class="number">10</span>, <span class="number">1</span>); </span><br><span class="line">　　　下面是新建一个 <span class="built_in">Date</span> 对象后，利用 <span class="built_in">Date</span> 对象的 getMonth、getDate、和 getFullYear方法获取时间，然后在动态文本框中输出的例子。 </span><br><span class="line">　　　　myDate = <span class="keyword">new</span> <span class="built_in">Date</span>(); </span><br><span class="line">　　　　dateTextField = (mydate.getMonth() + <span class="string">"/"</span> + myDate.getDate() + <span class="string">"/"</span> + mydate.getFullYear());</span><br></pre></td></tr></table></figure><h3 id="日期格式化"><a href="#日期格式化" class="headerlink" title="日期格式化"></a>日期格式化</h3><figure class="highlight javascript"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//将字符串日期格式化为yyyy-mm-dd</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">formatDate</span>(<span class="params">date</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>(date),</span><br><span class="line">        month = <span class="string">''</span> + (d.getMonth() + <span class="number">1</span>),</span><br><span class="line">        day = <span class="string">''</span> + d.getDate(),</span><br><span class="line">        year = d.getFullYear();</span><br><span class="line">     </span><br><span class="line">      <span class="keyword">if</span> (month.length &lt; <span class="number">2</span>) month = <span class="string">'0'</span> + month;</span><br><span class="line">      <span class="keyword">if</span> (day.length &lt; <span class="number">2</span>) day = <span class="string">'0'</span> + day;</span><br><span class="line">     </span><br><span class="line">      <span class="keyword">return</span> [year, month, day].join(<span class="string">'-'</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;js常用日期函数&quot;&gt;&lt;a href=&quot;#js常用日期函数&quot; class=&quot;headerlink&quot; title=&quot;js常用日期函数&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.baidu.com/s?wd=js常用日期函数&quot; target=&quot;_blank&quot; 
      
    
    </summary>
    
      <category term="前端" scheme="http://youhanghang.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="js" scheme="http://youhanghang.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>js数组</title>
    <link href="http://youhanghang.com/2018/10/29/JS%E6%95%B0%E7%BB%84/"/>
    <id>http://youhanghang.com/2018/10/29/JS数组/</id>
    <published>2018-10-29T09:00:12.780Z</published>
    <updated>2018-04-21T07:52:40.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://jeffjade.com/2015/09/25/2015-09-25-js-array/#" target="_blank" rel="noopener">转载自https://jeffjade.com/2015/09/25/2015-09-25-js-array/#</a><br><a href="https://www.baidu.com/s?wd=js数组" target="_blank" rel="noopener">百度搜索js数组</a></p><h3 id="js数组常用方法"><a href="#js数组常用方法" class="headerlink" title="js数组常用方法"></a>js数组常用方法</h3><h4 id="多维数组转一维"><a href="#多维数组转一维" class="headerlink" title="多维数组转一维"></a>多维数组转一维</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//[1, 2, 3, 4, 5, 6]+&quot;&quot;</span><br><span class="line">//&quot;1,2,3,4,5,6&quot;</span><br><span class="line">var arr = [1,[2,[[3,4],5],6]];</span><br><span class="line">function unid(arr)&#123;</span><br><span class="line">        var arr1 = (arr + &apos;&apos;).split(&apos;,&apos;);//将数组转字符串后再以逗号分隔转为数组</span><br><span class="line">        var arr2 = arr1.map(function(x)&#123;</span><br><span class="line">            return Number(x);</span><br><span class="line">        &#125;);</span><br><span class="line">        return arr2;</span><br><span class="line">&#125;</span><br><span class="line">console.log(unid(arr));</span><br></pre></td></tr></table></figure><h4 id="数组排序"><a href="#数组排序" class="headerlink" title="数组排序"></a>数组排序</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var arr1 = [1, 2, 5, 4, 3, 2, 7, 6, 9];</span><br><span class="line">var arr2 = [&apos;1&apos;, &apos;2&apos;, &apos;5&apos;, &apos;4&apos;, &apos;3&apos;, &apos;2&apos;, &apos;7&apos;, &apos;6&apos;, &apos;9&apos;];</span><br><span class="line">var arr3 = [&#123; date: &quot;2018&quot;, title: &quot;ttt&quot; &#125;, &#123; date: &quot;2017&quot;, title: &quot;ttt&quot; &#125;, &#123; date: &quot;2018&quot;, title: &quot;ttt&quot; &#125;, &#123; date: &quot;2018&quot;, title: &quot;ttt&quot; &#125;, &#123; date: &quot;2018&quot;, title: &quot;ttt&quot; &#125;, &#123; date: &quot;2018&quot;, title: &quot;ttt&quot; &#125;, &#123; date: &quot;2017&quot;, title: &quot;ttt&quot; &#125;, &#123; date: &quot;2016&quot;, title: &quot;ttt&quot; &#125;];</span><br><span class="line">var arr4 = [&#123; time: &quot;2018-02-20&quot;, title: &quot;ttt&quot; &#125;, &#123; time: &quot;2017-04-20&quot;, title: &quot;ttt&quot; &#125;, &#123; time: &quot;2018-03-20&quot;, title: &quot;ttt&quot; &#125;, &#123; time: &quot;2018-04-20&quot;, title: &quot;ttt&quot; &#125;, &#123; time: &quot;2018-04-20&quot;, title: &quot;ttt&quot; &#125;, &#123; time: &quot;2018-04-20&quot;, title: &quot;ttt&quot; &#125;, &#123; time: &quot;2017-04-20&quot;, title: &quot;ttt&quot; &#125;, &#123; time: &quot;2016-04-20&quot;, title: &quot;ttt&quot; &#125;];</span><br><span class="line"></span><br><span class="line">console.log(arr1);</span><br><span class="line">console.log(arr2);</span><br><span class="line">console.log(arr3);</span><br><span class="line">console.log(arr4);</span><br><span class="line">function compare(value1, value2) &#123;</span><br><span class="line">    if (value1 &lt; value2) &#123;</span><br><span class="line">        return -1;</span><br><span class="line">    &#125; else if (value1 &gt; value2) &#123;</span><br><span class="line">        return 1;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function createComparisonFunction(propertyName) &#123;</span><br><span class="line">    return function (object1, object2) &#123;</span><br><span class="line">        var value1 = object1[propertyName];</span><br><span class="line">        var value2 = object2[propertyName];</span><br><span class="line">        if (value1 &lt; value2) &#123;</span><br><span class="line">            return -1;</span><br><span class="line">        &#125; else if (value1 &gt; value2) &#123;</span><br><span class="line">            return 1;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return 0;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line">function createComparisonFunction2(propertyName) &#123;</span><br><span class="line">    return function (object1, object2) &#123;</span><br><span class="line">        //将time属性的值转换成时间戳</span><br><span class="line">        var value1 = new Date(object1[propertyName]).getTime();</span><br><span class="line">        var value2 = new Date(object2[propertyName]).getTime();</span><br><span class="line">        if (value1 &lt; value2) &#123;</span><br><span class="line">            return -1;</span><br><span class="line">        &#125; else if (value1 &gt; value2) &#123;</span><br><span class="line">            return 1;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return 0;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">arr1.sort(compare);</span><br><span class="line">arr2.sort(compare);</span><br><span class="line">arr3.sort(createComparisonFunction(&apos;date&apos;));</span><br><span class="line">arr4.sort(createComparisonFunction2(&apos;time&apos;));</span><br><span class="line">console.log(arr1);</span><br><span class="line">console.log(arr2);</span><br><span class="line">console.log(&quot;arr3&quot;, arr3);</span><br><span class="line">console.log(&quot;arr4&quot;, arr4);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="数组元素的添加"><a href="#数组元素的添加" class="headerlink" title="数组元素的添加"></a>数组元素的添加</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">arrayObj.push([item1 [item2 [. . . [itemN ]]]]);</span><br><span class="line">// 将一个或多个新元素添加到数组结尾，并返回数组新长度</span><br><span class="line">arrayObj.unshift([item1 [item2 [. . . [itemN ]]]]);</span><br><span class="line">// 将一个或多个新元素添加到数组开始，数组中的元素自动后移，返回数组新长度</span><br><span class="line">arrayObj.splice(insertPos,0,[item1[, item2[, . . . [,itemN]]]]);</span><br><span class="line">//将一个或多个新元素插入到数组的指定位置，插入位置的元素自动后移，返回&quot;&quot;。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="数组元素的删除"><a href="#数组元素的删除" class="headerlink" title="数组元素的删除"></a>数组元素的删除</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">arrayObj.pop(); //移除最后一个元素并返回该元素值</span><br><span class="line">arrayObj.shift(); //移除最前一个元素并返回该元素值，数组中元素自动前移</span><br><span class="line">arrayObj.splice(deletePos,deleteCount);</span><br><span class="line">//删除从指定位置deletePos开始的指定数量deleteCount的元素，数组形式返回所移除的元素</span><br></pre></td></tr></table></figure><h4 id="数组的截取和合并"><a href="#数组的截取和合并" class="headerlink" title="数组的截取和合并"></a>数组的截取和合并</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">arrayObj.slice(start, [end]);</span><br><span class="line">//以数组的形式返回数组的一部分，注意不包括 end 对应的元素，如果省略 end 将复制 start 之后的所有元素</span><br><span class="line">arrayObj.concat([item1[, item2[, . . . [,itemN]]]]);</span><br><span class="line">//将多个数组（也可以是字符串，或者是数组和字符串的混合）连接为一个数组，返回连接好的新的数组</span><br></pre></td></tr></table></figure><h4 id="数组的拷贝"><a href="#数组的拷贝" class="headerlink" title="数组的拷贝"></a>数组的拷贝</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">arrayObj.slice(0); //返回数组的拷贝数组，注意是一个新的数组，不是指向</span><br><span class="line">arrayObj.concat(); //返回数组的拷贝数组，注意是一个新的数组，不是指向</span><br></pre></td></tr></table></figure><h4 id="数组元素的排序"><a href="#数组元素的排序" class="headerlink" title="数组元素的排序"></a>数组元素的排序</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">arrayObj.reverse(); //反转元素（最前的排到最后、最后的排到最前），返回数组地址</span><br><span class="line">arrayObj.sort(); //对数组元素排序，返回数组地址</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="数组元素转字符串，字符串转数组"><a href="#数组元素转字符串，字符串转数组" class="headerlink" title="数组元素转字符串，字符串转数组"></a>数组元素转字符串，字符串转数组</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var arr = [&apos;A&apos;, &apos;B&apos;, &apos;C&apos;, 1, 2, 3];</span><br><span class="line">arr.join(&apos;-&apos;); // &apos;A-B-C-1-2-3&apos;</span><br><span class="line">arr.split(&apos;-&apos;); // [&apos;A&apos;, &apos;B&apos;, &apos;C&apos;, 1, 2, 3]</span><br></pre></td></tr></table></figure><h4 id="通过indexOf-来搜索一个指定的元素的位置"><a href="#通过indexOf-来搜索一个指定的元素的位置" class="headerlink" title="通过indexOf()来搜索一个指定的元素的位置"></a>通过indexOf()来搜索一个指定的元素的位置</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var arr = [10, 20, &apos;30&apos;, &apos;xyz&apos;];</span><br><span class="line">arr.indexOf(10); // 元素10的索引为0</span><br><span class="line">arr.indexOf(30); // 元素30没有找到，返回-1</span><br><span class="line">arr.indexOf(&apos;30&apos;); // 元素&apos;30&apos;的索引为2</span><br></pre></td></tr></table></figure><h4 id="判断是不是数组"><a href="#判断是不是数组" class="headerlink" title="判断是不是数组"></a>判断是不是数组</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function isArray(obj) &#123;  </span><br><span class="line">  return Object.prototype.toString.call(obj) === &apos;[object Array]&apos;;   </span><br><span class="line">&#125;</span><br><span class="line">//Array.isArray()^See方法用来判断某个值是否为数组</span><br><span class="line">// 下面的函数调用都返回 true</span><br><span class="line">Array.isArray([]);</span><br><span class="line">Array.isArray([1]);</span><br><span class="line">Array.isArray(new Array());</span><br><span class="line">// 鲜为人知的事实：其实 Array.prototype 也是一个数组。</span><br><span class="line">Array.isArray(Array.prototype);</span><br><span class="line">// 下面的函数调用都返回 false</span><br><span class="line">Array.isArray();</span><br><span class="line">Array.isArray(&#123;&#125;);</span><br><span class="line">Array.isArray(null);</span><br><span class="line">Array.isArray(undefined);</span><br><span class="line">Array.isArray(17);</span><br><span class="line">Array.isArray(&apos;Array&apos;);</span><br><span class="line">Array.isArray(true);</span><br><span class="line">Array.isArray(false);</span><br><span class="line">Array.isArray(&#123; __proto__: Array.prototype &#125;);</span><br></pre></td></tr></table></figure><h3 id="数组迭代过程"><a href="#数组迭代过程" class="headerlink" title="数组迭代过程"></a>数组迭代过程</h3><h4 id="filter"><a href="#filter" class="headerlink" title="filter()"></a>filter()</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//方法使用指定的函数测试所有元素，并创建一个包含所有通过测试的元素的新数组</span><br><span class="line">function isBigEnough(element) &#123;</span><br><span class="line">  return element &gt;= 10;</span><br><span class="line">&#125;</span><br><span class="line">var filtered = [12, 5, 8, 130, 44].filter(isBigEnough);</span><br><span class="line">// filtered is [12, 130, 44]</span><br></pre></td></tr></table></figure> <h4 id="forEach"><a href="#forEach" class="headerlink" title="forEach()"></a>forEach()</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//方法让数组的每一项都执行一次给定的函数。</span><br><span class="line">//forEach 遍历的范围在第一次调用 callback 前就会确定。调用forEach 后添加到数组中的项不会被 callback 访问到。如果已经存在的值被改变，则传递给 callback 的值是 forEach 遍历到他们那一刻的值。已删除的项不会被遍历到</span><br><span class="line">function logArrayElements(element, index, array) &#123;</span><br><span class="line">    console.log(&quot;a[&quot; + index + &quot;] = &quot; + element);</span><br><span class="line">&#125;</span><br><span class="line">[2, 5, 9].forEach(logArrayElements);</span><br><span class="line">// logs:</span><br><span class="line">// a[0] = 2</span><br><span class="line">// a[1] = 5</span><br><span class="line">// a[2] = 9</span><br></pre></td></tr></table></figure> <h4 id="every"><a href="#every" class="headerlink" title="every()"></a>every()</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//callback 被调用时传入三个参数：元素值，元素的索引，原数组。 every 不会改变原数组。</span><br><span class="line">//callback 只会为那些已经被赋值的索引调用。不会为那些被删除或从来没被赋值的索引调用</span><br><span class="line"></span><br><span class="line">//检测数组中的所有元素是否都大于 10</span><br><span class="line">function isBigEnough(element, index, array) &#123;</span><br><span class="line">  return (element &gt;= 10);</span><br><span class="line">&#125;</span><br><span class="line">var passed = [12, 5, 8, 130, 44].every(isBigEnough);</span><br><span class="line">// passed is false</span><br><span class="line">passed = [12, 54, 18, 130, 44].every(isBigEnough);</span><br><span class="line">// passed is true</span><br></pre></td></tr></table></figure> <h4 id="map"><a href="#map" class="headerlink" title="map()"></a>map()</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//方法返回一个由原数组中的每个元素调用一个指定方法后的返回值组成的新数组。</span><br><span class="line">//map 方法会给原数组中的每个元素都按顺序调用一次 callback 函数。callback 每次执行后的返回值组合起来形成一个新数组。 callback 函数只会在有值的索引上被调用；那些从来没被赋过值或者使用 delete 删除的索引则不会被调用。map 不修改调用它的原数组本身（当然可以在 callback 执行时改变原数组）</span><br><span class="line"></span><br><span class="line">//在一个 String  上使用 map 方法获取字符串中每个字符所对应的 ASCII 码组成的数组：</span><br><span class="line">var map = Array.prototype.map</span><br><span class="line">var a = map.call(&quot;Hello World&quot;, function(x) &#123; return x.charCodeAt(0); &#125;)</span><br><span class="line">// a的值为[72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100]</span><br></pre></td></tr></table></figure> <h4 id="some"><a href="#some" class="headerlink" title="some()"></a>some()</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//方法测试数组中的某些元素是否通过了指定函数的测试</span><br><span class="line">//描述:some 为数组中的每一个元素执行一次 callback 函数，直到找到一个使得 callback 返回一个“真值”（即可转换为布尔值 true 的值）。如果找到了这样一个值，some 将会立即返回 true。否则，some 返回 false。callback 只会在那些”有值“的索引上被调用，不会在那些被删除或从来未被赋值的索引上调用。</span><br><span class="line"></span><br><span class="line">//检测在数组中是否有元素大于 10。</span><br><span class="line">function isBigEnough(element, index, array) &#123;</span><br><span class="line">  return (element &gt;= 10);</span><br><span class="line">&#125;</span><br><span class="line">var passed = [2, 5, 8, 1, 4].some(isBigEnough);</span><br><span class="line">// passed is false</span><br><span class="line">passed = [12, 5, 8, 1, 4].some(isBigEnough);</span><br><span class="line">// passed is true</span><br></pre></td></tr></table></figure> <h4 id="reduce"><a href="#reduce" class="headerlink" title="reduce()"></a>reduce()</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//将数组所有项相加</span><br><span class="line">var total = [0, 1, 2, 3].reduce(function(a, b) &#123;</span><br><span class="line">    return a + b;</span><br><span class="line">&#125;);</span><br><span class="line">// total == 6</span><br><span class="line">// 数组扁平化</span><br><span class="line">var flattened = [[0, 1], [2, 3], [4, 5]].reduce(function(a, b) &#123;</span><br><span class="line">    return a.concat(b);</span><br><span class="line">&#125;);</span><br><span class="line">// flattened is [0, 1, 2, 3, 4, 5]</span><br></pre></td></tr></table></figure> <h3 id="js数组其他常用代码"><a href="#js数组其他常用代码" class="headerlink" title="js数组其他常用代码"></a>js数组其他常用代码</h3><h4 id="对数组重复元素的计数"><a href="#对数组重复元素的计数" class="headerlink" title="对数组重复元素的计数"></a>对数组重复元素的计数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//对数组重复元素的计数</span><br><span class="line">function eleCountFromArr(arr)&#123;</span><br><span class="line">  var newObj = &#123;&#125;;</span><br><span class="line">  for(var i=0;i&lt;arr.length;i++)&#123;</span><br><span class="line">    var temp=arr[i];</span><br><span class="line">    var count=0;</span><br><span class="line">    for(var j=0;j&lt;arr.length;j++)&#123;</span><br><span class="line">      if(arr[j]==temp)&#123;</span><br><span class="line">        count++;</span><br><span class="line">        arr[j]=-1;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if(temp != -1)&#123;</span><br><span class="line">      newObj[temp]=count;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return newObj;</span><br><span class="line">&#125;</span><br><span class="line">//eleCountFromArr([1,2,3,3,4]); </span><br><span class="line">//Object &#123;1: 1, 2: 1, 3: 2, 4: 1&#125;</span><br></pre></td></tr></table></figure> <h4 id="数组中是否有重复值的判断方法"><a href="#数组中是否有重复值的判断方法" class="headerlink" title="数组中是否有重复值的判断方法"></a>数组中是否有重复值的判断方法</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function isRepeat(arr)&#123; </span><br><span class="line"></span><br><span class="line">  var hash = &#123;&#125;; </span><br><span class="line"></span><br><span class="line">  for(var i in arr) &#123; </span><br><span class="line"></span><br><span class="line">  if(hash[arr[i]]) </span><br><span class="line"></span><br><span class="line">  return true; </span><br><span class="line"></span><br><span class="line">  hash[arr[i]] = true; </span><br><span class="line"></span><br><span class="line">  &#125; </span><br><span class="line"></span><br><span class="line">  return false; </span><br><span class="line"></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h4 id="数组中是否有重复值的判断方法-1"><a href="#数组中是否有重复值的判断方法-1" class="headerlink" title="数组中是否有重复值的判断方法"></a>数组中是否有重复值的判断方法</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function uniqueArr(array)&#123;</span><br><span class="line">  var newArr = [];</span><br><span class="line">  for(var i = 0, l = array.length; i &lt; l; i++) &#123;</span><br><span class="line">    for(var j = i + 1; j &lt; l; j++)</span><br><span class="line">      if (array[i] === array[j]) j = ++i;</span><br><span class="line">    newArr.push(array[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  return newArr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> <h3 id="一点总结"><a href="#一点总结" class="headerlink" title="一点总结"></a>一点总结</h3><p>pop,push,reverse,shift,sort,splice,unshift 会改变原数组<br>join,concat,indexOf,lastIndexOf,slice,toString 不会改变原数组<br>map,filter,some,every,reduce,forEach这些迭代方法不会改变原数组<br>几个注意点：<br>shift,pop会返回那个被删除的元素<br>splice 会返回被删除元素组成的数组，或者为空数组<br>push 会返回新数组长度<br>some 在有true的时候停止<br>every 在有false的时候停止<br>上述的迭代方法可以在最后追加一个参数thisArg,它是执行 callback 时的 this 值。<br>JavaScript的数据类型分为：值类型和引用类型(地址值)；而常见的引用类型有Object和Array／数组的存储模型中，如果是诸如Number,String之类的类型数据会被直接压入栈中，而引用类型只会压入对该值的一个索引（即C中所说的保存了数据的指针）。这些数据时储存在堆中的某块区间中，堆栈并不是独立的，栈中也可以在堆中存放。在使用Array的进行赋值操作的时候，也当注意是否要进行深度拷贝复制(可借助arr.slice(0))，以免造成对自身污染。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://jeffjade.com/2015/09/25/2015-09-25-js-array/#&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;转载自https://jeffjade.com/2015/09/25/2015-09
      
    
    </summary>
    
      <category term="前端" scheme="http://youhanghang.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="js" scheme="http://youhanghang.com/tags/js/"/>
    
      <category term="数组" scheme="http://youhanghang.com/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>js散记</title>
    <link href="http://youhanghang.com/2018/10/29/js%E6%95%A3%E8%AE%B0/"/>
    <id>http://youhanghang.com/2018/10/29/js散记/</id>
    <published>2018-10-29T09:00:12.750Z</published>
    <updated>2018-04-17T10:24:30.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id=""><a href="#" class="headerlink" title=""></a><a href="https://www.baidu.com/s?wd=" target="_blank" rel="noopener"></a></h3><h3 id="详解js中对象的深浅拷贝"><a href="#详解js中对象的深浅拷贝" class="headerlink" title="详解js中对象的深浅拷贝"></a><a href="https://www.jianshu.com/p/38b097da358f" target="_blank" rel="noopener">详解js中对象的深浅拷贝</a></h3><h3 id="修改js对象属性名称"><a href="#修改js对象属性名称" class="headerlink" title="修改js对象属性名称"></a>修改js对象属性名称</h3><figure class="highlight javascript"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a=&#123;&#125;;</span><br><span class="line">a.b=<span class="number">1</span>;</span><br><span class="line">a.c=a.b</span><br><span class="line"><span class="keyword">delete</span> a.b</span><br><span class="line"><span class="comment">//true</span></span><br><span class="line">a.c</span><br><span class="line"><span class="comment">//1</span></span><br></pre></td></tr></table></figure><h3 id="a-1-1"><a href="#a-1-1" class="headerlink" title="a=1==1"></a>a=1==1</h3><figure class="highlight javascript"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a=<span class="number">1</span>==<span class="number">1</span></span><br><span class="line">a</span><br><span class="line"><span class="comment">// true</span></span><br></pre></td></tr></table></figure><h3 id="递归数组将数组每一项的children-填入新的数组并返回"><a href="#递归数组将数组每一项的children-填入新的数组并返回" class="headerlink" title="递归数组将数组每一项的children 填入新的数组并返回"></a>递归数组将数组每一项的children 填入新的数组并返回</h3><figure class="highlight javascript"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line">&lt;!-- 递归数组</span><br><span class="line">将数组每一项的children 填入新的数组并返回</span><br><span class="line">中对象的children --&gt;</span><br><span class="line">&lt;!DOCTYPE &gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge,chrome=1"</span>&gt;</span><br><span class="line">    &lt;title&gt;<span class="xml"><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line">    &lt;style&gt;</span><br><span class="line"></span><br><span class="line">    &lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>head&gt;</span><br><span class="line">  &lt;body <span class="class"><span class="keyword">class</span></span>=<span class="string">"easyui-layout"</span> data-options=<span class="string">"fit:true"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"div"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">  &lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">  &lt;script type="text/</span>javascript<span class="string">"&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">var array=[&#123;</span></span><br><span class="line"><span class="string">    title:"</span>目录<span class="string">",</span></span><br><span class="line"><span class="string">    children:[&#123;</span></span><br><span class="line"><span class="string">        title:"</span>我的音乐<span class="string">",</span></span><br><span class="line"><span class="string">        children:[&#123;</span></span><br><span class="line"><span class="string">            title:"</span>刘若英<span class="string">",</span></span><br><span class="line"><span class="string">            children:[&#123;</span></span><br><span class="line"><span class="string">                title:"</span>后来<span class="string">",</span></span><br><span class="line"><span class="string">                children:[&#123;</span></span><br><span class="line"><span class="string">                    title:'1'</span></span><br><span class="line"><span class="string">                &#125;,&#123;</span></span><br><span class="line"><span class="string">                    title:'2'</span></span><br><span class="line"><span class="string">                &#125;]</span></span><br><span class="line"><span class="string">            &#125;,&#123;</span></span><br><span class="line"><span class="string">                title:"</span>我们没有在一起<span class="string">"</span></span><br><span class="line"><span class="string">            &#125;,&#123;</span></span><br><span class="line"><span class="string">                title:"</span>成全<span class="string">"</span></span><br><span class="line"><span class="string">            &#125;]</span></span><br><span class="line"><span class="string">        &#125;,&#123;</span></span><br><span class="line"><span class="string">            title:"</span>周杰伦<span class="string">"</span></span><br><span class="line"><span class="string">        &#125;,&#123;</span></span><br><span class="line"><span class="string">            title:"</span>蔡依林<span class="string">"</span></span><br><span class="line"><span class="string">        &#125;]</span></span><br><span class="line"><span class="string">    &#125;,&#123;</span></span><br><span class="line"><span class="string">        title:"</span>我的书籍<span class="string">",</span></span><br><span class="line"><span class="string">        children:[&#123;</span></span><br><span class="line"><span class="string">            title:"</span>javascript<span class="string">"</span></span><br><span class="line"><span class="string">        &#125;,&#123;</span></span><br><span class="line"><span class="string">            title:"</span>html css<span class="string">"</span></span><br><span class="line"><span class="string">        &#125;]</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    ]</span></span><br><span class="line"><span class="string">&#125;];</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function render(arr,level)&#123;</span></span><br><span class="line"><span class="string">    var level=level||0;</span></span><br><span class="line"><span class="string">    level++;</span></span><br><span class="line"><span class="string">    var i= 0,len=arr.length;</span></span><br><span class="line"><span class="string">    var str="</span>&lt;ul&gt;<span class="string">"</span></span><br><span class="line"><span class="string">    for(;i&lt;len;i++)&#123;</span></span><br><span class="line"><span class="string">        str+="</span>&lt;li&gt;<span class="string">"+level+"</span>、<span class="string">"+arr[i].title;</span></span><br><span class="line"><span class="string">        if(arr[i].children&amp;&amp;arr[i].children.length&gt;0)&#123;</span></span><br><span class="line"><span class="string">            str+=render(arr[i].children,level);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        str+="</span>&lt;<span class="regexp">/li&gt;";</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">    str+="&lt;/u</span>l&gt;<span class="string">";</span></span><br><span class="line"><span class="string">    return str;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function getChildrenArr(arr,childrenArr)&#123;</span></span><br><span class="line"><span class="string">    var childrenArr=childrenArr||[];</span></span><br><span class="line"><span class="string">    var i= 0,len=arr.length;</span></span><br><span class="line"><span class="string">    for(;i&lt;len;i++)&#123;</span></span><br><span class="line"><span class="string">        childrenArr.push(arr[i]);</span></span><br><span class="line"><span class="string">        if(arr[i].children&amp;&amp;arr[i].children.length&gt;0)&#123;</span></span><br><span class="line"><span class="string">            getChildrenArr(arr[i].children,childrenArr);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return childrenArr;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">document.body.innerHTML=render(array);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">console.log(getChildrenArr(array));</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.baidu.com/s?wd=&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h3 id=&quot;
      
    
    </summary>
    
      <category term="前端" scheme="http://youhanghang.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="js" scheme="http://youhanghang.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>console.log的简单封装</title>
    <link href="http://youhanghang.com/2018/10/29/js%E6%89%93%E5%8D%B0%E7%AE%80%E5%8D%95%E5%B0%81%E8%A3%85/"/>
    <id>http://youhanghang.com/2018/10/29/js打印简单封装/</id>
    <published>2018-10-29T09:00:12.710Z</published>
    <updated>2017-10-15T07:19:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="百度搜索console-log"><a href="#百度搜索console-log" class="headerlink" title="百度搜索console.log"></a><a href="https://www.baidu.com/s?wd=console.log" target="_blank" rel="noopener">百度搜索console.log</a></h2><figure class="highlight javascript"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">'body'</span>).append(<span class="string">'&lt;button class="refresh-page" onclick=" window.location.reload();" style="width:100px;height:100px;position:fixed;right:0;bottom:50%;z-index:99;"&gt;&lt;a&gt;refresh&lt;/a&gt;&lt;/button&gt;'</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.clear();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">log</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> args = <span class="built_in">Array</span>.prototype.slice.apply(<span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">if</span> (args.length == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(args[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (args.length == <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'%c'</span> + <span class="string">'// '</span> + args[<span class="number">0</span>], <span class="string">"color:#7B9B99;"</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(args[<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (args.length == <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'%c'</span> + <span class="string">'// '</span> + args[<span class="number">0</span>], <span class="string">"color:#7B9B99;"</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(args[<span class="number">1</span>]));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cLog</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.clear();</span><br><span class="line">    <span class="keyword">var</span> args = <span class="built_in">Array</span>.prototype.slice.apply(<span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">if</span> (args.length == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(args[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (args.length == <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'%c'</span> + <span class="string">'// '</span> + args[<span class="number">0</span>], <span class="string">"color:#7B9B99;"</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(args[<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (args.length == <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'%c'</span> + <span class="string">'// '</span> + args[<span class="number">0</span>], <span class="string">"color:#7B9B99;"</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(args[<span class="number">1</span>]));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;百度搜索console-log&quot;&gt;&lt;a href=&quot;#百度搜索console-log&quot; class=&quot;headerlink&quot; title=&quot;百度搜索console.log&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.baidu.com/s?wd=conso
      
    
    </summary>
    
      <category term="前端" scheme="http://youhanghang.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="自己开发" scheme="http://youhanghang.com/tags/%E8%87%AA%E5%B7%B1%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>js常用函数</title>
    <link href="http://youhanghang.com/2018/10/29/js%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/"/>
    <id>http://youhanghang.com/2018/10/29/js常用函数/</id>
    <published>2018-10-29T09:00:12.680Z</published>
    <updated>2018-03-22T08:15:16.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="js常用函数"><a href="#js常用函数" class="headerlink" title="js常用函数"></a>js常用函数</h3><figure class="highlight javascript"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="函数队列"><a href="#函数队列" class="headerlink" title="函数队列"></a>函数队列</h3><figure class="highlight javascript"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">//关于实现函数按一定顺序调用的例子</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="传入多个参数累加"><a href="#传入多个参数累加" class="headerlink" title="传入多个参数累加"></a>传入多个参数累加</h3><figure class="highlight javascript"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> newArr = <span class="built_in">Array</span>.prototype.reduce.call(<span class="built_in">arguments</span>, <span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a+b;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">console</span>.log(newArr);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//add(1,3);3</span></span><br><span class="line"><span class="comment">//add(1,2,3);6</span></span><br></pre></td></tr></table></figure><h3 id="解析url"><a href="#解析url" class="headerlink" title="解析url"></a>解析url</h3><figure class="highlight javascript"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> url = <span class="built_in">window</span>.location;</span><br><span class="line">    <span class="keyword">var</span> search  = url.search;</span><br><span class="line">    <span class="keyword">var</span> query = &#123;&#125;;</span><br><span class="line">    <span class="keyword">var</span> searchArr = search.slice(<span class="number">1</span>, search.length).split(<span class="string">'&amp;'</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;searchArr.length;i++)&#123;</span><br><span class="line">        <span class="keyword">var</span> tempArr = searchArr[i].split(<span class="string">'='</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">typeof</span> query[tempArr[<span class="number">0</span>]] == <span class="string">"undefined"</span>)&#123;</span><br><span class="line">            query[tempArr[<span class="number">0</span>]] = tempArr[<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        href : url.protocol,</span><br><span class="line">        protocol : url.protocol,</span><br><span class="line">        host : url.host,</span><br><span class="line">        port : url.port,</span><br><span class="line">        pathname : url.pathname,</span><br><span class="line">        origin : url.origin,</span><br><span class="line">        hostname : url.hostname,</span><br><span class="line">        hash : url.hash,</span><br><span class="line">        query : query</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><h3 id="js产生随机数"><a href="#js产生随机数" class="headerlink" title="js产生随机数"></a>js产生随机数</h3><figure class="highlight javascript"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">//产生随机数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">randomNum</span>(<span class="params">minNum,maxNum</span>)</span>&#123; </span><br><span class="line">    <span class="keyword">switch</span>(<span class="built_in">arguments</span>.length)&#123; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>: </span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random()*minNum+<span class="number">1</span>,<span class="number">10</span>); </span><br><span class="line">        <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>: </span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random()*(maxNum-minNum+<span class="number">1</span>)+minNum,<span class="number">10</span>); </span><br><span class="line">        <span class="keyword">break</span>; </span><br><span class="line">            <span class="keyword">default</span>: </span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="强制保留2位小数"><a href="#强制保留2位小数" class="headerlink" title="强制保留2位小数"></a>强制保留2位小数</h3><figure class="highlight javascript"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">//强制保留2位小数,不进行四舍五入,如：2，会在2后面补上00.即2.00 </span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">toDecimal2</span>(<span class="params">num</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> floatNum = <span class="built_in">parseFloat</span>(num);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isNaN</span>(floatNum)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//不进行四舍五入</span></span><br><span class="line">        <span class="keyword">var</span> floatNumStr = <span class="built_in">Math</span>.floor(floatNum * <span class="number">100</span>) / <span class="number">100</span>+<span class="string">''</span>;</span><br><span class="line">        <span class="keyword">var</span> rs = floatNumStr.indexOf(<span class="string">'.'</span>); </span><br><span class="line">        <span class="keyword">if</span> (rs &lt; <span class="number">0</span>) &#123; </span><br><span class="line">            rs = floatNumStr.length; </span><br><span class="line">            floatNumStr += <span class="string">'.'</span>; </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">while</span> (floatNumStr.length &lt;= rs + <span class="number">2</span>) &#123; </span><br><span class="line">            floatNumStr += <span class="string">'0'</span>; </span><br><span class="line">        &#125;             </span><br><span class="line">        <span class="keyword">return</span> floatNumStr;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="采用正则表达式获取地址栏参数"><a href="#采用正则表达式获取地址栏参数" class="headerlink" title="采用正则表达式获取地址栏参数"></a>采用正则表达式获取地址栏参数</h3><figure class="highlight javascript"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">//采用正则表达式获取地址栏参数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetQueryString</span>(<span class="params">name</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     <span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(^|&amp;)"</span>+ name +<span class="string">"=([^&amp;]*)(&amp;|$)"</span>);</span><br><span class="line">     <span class="keyword">var</span> r = <span class="built_in">window</span>.location.search.substr(<span class="number">1</span>).match(reg);</span><br><span class="line">     <span class="keyword">if</span>(r!=<span class="literal">null</span>)<span class="keyword">return</span>  <span class="built_in">unescape</span>(r[<span class="number">2</span>]); <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 调用方法</span></span><br><span class="line">alert(GetQueryString(<span class="string">"参数名1"</span>));</span><br><span class="line">alert(GetQueryString(<span class="string">"参数名2"</span>));</span><br><span class="line">alert(GetQueryString(<span class="string">"参数名3"</span>));</span><br></pre></td></tr></table></figure><h3 id="获得唯一id"><a href="#获得唯一id" class="headerlink" title="获得唯一id"></a>获得唯一id</h3><figure class="highlight javascript"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getUniqueId</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'</span>.replace(<span class="regexp">/[xy]/g</span>, <span class="function"><span class="keyword">function</span> (<span class="params">c</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> r = <span class="built_in">Math</span>.random() * <span class="number">16</span> | <span class="number">0</span>,</span><br><span class="line">      v = c == <span class="string">'x'</span> ? r : (r &amp; <span class="number">0x3</span> | <span class="number">0x8</span>);</span><br><span class="line">    <span class="keyword">return</span> v.toString(<span class="number">16</span>).toUpperCase();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="立即执行函数，for循环执行的setTimeout"><a href="#立即执行函数，for循环执行的setTimeout" class="headerlink" title="立即执行函数，for循环执行的setTimeout"></a>立即执行函数，for循环执行的setTimeout</h3><figure class="highlight javascript"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(a++)</span><br><span class="line">&#125;,<span class="number">1</span>)</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123; </span><br><span class="line">  (<span class="function"><span class="keyword">function</span>(<span class="params">i</span>)</span>&#123;   <span class="comment">//立刻执行函数</span></span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(i); </span><br><span class="line">     &#125;,<span class="number">1000</span>); </span><br><span class="line">  &#125;)(i); </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;js常用函数&quot;&gt;&lt;a href=&quot;#js常用函数&quot; class=&quot;headerlink&quot; title=&quot;js常用函数&quot;&gt;&lt;/a&gt;js常用函数&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;figcaption&gt;&lt;span&gt;[标
      
    
    </summary>
    
      <category term="前端" scheme="http://youhanghang.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="js" scheme="http://youhanghang.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>js字符串常用函数</title>
    <link href="http://youhanghang.com/2018/10/29/js%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>http://youhanghang.com/2018/10/29/js字符串常用方法/</id>
    <published>2018-10-29T09:00:12.650Z</published>
    <updated>2017-12-14T06:47:10.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="js字符串常用函数"><a href="#js字符串常用函数" class="headerlink" title="js字符串常用函数"></a>js字符串常用函数</h3><figure class="highlight javascript"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">//强制保留2位小数不,进行四舍五入,如：2，会在2后面补上00.即2.00 产生随机数</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">toDecimal2</span>(<span class="params">num</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> floatNum = <span class="built_in">parseFloat</span>(num);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isNaN</span>(floatNum)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//不进行四舍五入</span></span><br><span class="line">        <span class="keyword">var</span> floatNumStr = <span class="built_in">Math</span>.floor(floatNum * <span class="number">100</span>) / <span class="number">100</span>+<span class="string">''</span>;</span><br><span class="line">        <span class="keyword">var</span> rs = floatNumStr.indexOf(<span class="string">'.'</span>); </span><br><span class="line">        <span class="keyword">if</span> (rs &lt; <span class="number">0</span>) &#123; </span><br><span class="line">            rs = floatNumStr.length; </span><br><span class="line">            floatNumStr += <span class="string">'.'</span>; </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">while</span> (floatNumStr.length &lt;= rs + <span class="number">2</span>) &#123; </span><br><span class="line">            floatNumStr += <span class="string">'0'</span>; </span><br><span class="line">        &#125;             </span><br><span class="line">        <span class="keyword">return</span> floatNumStr;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;js字符串常用函数&quot;&gt;&lt;a href=&quot;#js字符串常用函数&quot; class=&quot;headerlink&quot; title=&quot;js字符串常用函数&quot;&gt;&lt;/a&gt;js字符串常用函数&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;figcapt
      
    
    </summary>
    
      <category term="前端" scheme="http://youhanghang.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="js" scheme="http://youhanghang.com/tags/js/"/>
    
      <category term="字符串" scheme="http://youhanghang.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>js兼容问题处理</title>
    <link href="http://youhanghang.com/2018/10/29/js%E5%85%BC%E5%AE%B9/"/>
    <id>http://youhanghang.com/2018/10/29/js兼容/</id>
    <published>2018-10-29T09:00:12.620Z</published>
    <updated>2018-04-17T09:41:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.baidu.com/s?wd=js兼容问题处理" target="_blank" rel="noopener">百度搜索js兼容</a></p><h3 id="谈谈JS中常遇到的浏览器兼容问题和解决方法"><a href="#谈谈JS中常遇到的浏览器兼容问题和解决方法" class="headerlink" title="谈谈JS中常遇到的浏览器兼容问题和解决方法"></a><a href="http://www.jb51.net/article/100373.htm" target="_blank" rel="noopener">谈谈JS中常遇到的浏览器兼容问题和解决方法</a></h3><blockquote><ul><li>常遇到的关于浏览器的宽高问题：</li><li>event事件问题</li><li>DOM节点相关的问题</li></ul></blockquote><h3 id="JS中出现的兼容性问题"><a href="#JS中出现的兼容性问题" class="headerlink" title="JS中出现的兼容性问题"></a><a href="https://www.cnblogs.com/yufann/p/Browser1.html" target="_blank" rel="noopener">JS中出现的兼容性问题</a></h3><blockquote><ul><li>关于获取行外样式 currentStyle 和 getComputedStyle 出现的兼容性问题</li><li>关于用“索引”获取字符串每一项出现的兼容性问题:兼容方法:str.charAt(i)  </li><li>关于使用 firstChild,lastChild 等，获取第一个/最后一个元素节点时产生的问题</li><li>关于获取滚动条距离而出现的问题</li></ul></blockquote><h3 id="JavaScript中解决多浏览器兼容性23个问题的快速解决方法"><a href="#JavaScript中解决多浏览器兼容性23个问题的快速解决方法" class="headerlink" title="JavaScript中解决多浏览器兼容性23个问题的快速解决方法"></a><a href="http://www.jb51.net/article/84596.htm" target="_blank" rel="noopener">JavaScript中解决多浏览器兼容性23个问题的快速解决方法</a></h3><blockquote><ul><li>关于获取行外样式 currentStyle 和 getComputedStyle 出现的兼容性问题</li><li>关于用“索引”获取字符串每一项出现的兼容性问题:兼容方法:str.charAt(i)  </li><li>关于使用 firstChild,lastChild 等，获取第一个/最后一个元素节点时产生的问题</li><li>关于获取滚动条距离而出现的问题</li></ul></blockquote><h3 id="跨浏览器的事件对象"><a href="#跨浏览器的事件对象" class="headerlink" title="跨浏览器的事件对象"></a>跨浏览器的事件对象</h3><blockquote><ul><li>监听事件，移除监听事件</li><li>获取事件event对象</li><li>获取触发事件的节点</li><li>阻止默认事件</li><li>阻止事件冒泡<figure class="highlight javascript"><figcaption><span>[标题] [] [url] [link text]</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> EventUtil = &#123;</span><br><span class="line"></span><br><span class="line">    addHandler: <span class="function"><span class="keyword">function</span>(<span class="params">element, type, handler</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (element.addEventListener)&#123;</span><br><span class="line">            element.addEventListener(type, handler, <span class="literal">false</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (element.attachEvent)&#123;</span><br><span class="line">            element.attachEvent(<span class="string">"on"</span> + type, handler);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            element[<span class="string">"on"</span> + type] = handler;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    getButton: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">document</span>.implementation.hasFeature(<span class="string">"MouseEvents"</span>, <span class="string">"2.0"</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> event.button;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">switch</span>(event.button)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">4</span>: <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    getCharCode: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> event.charCode == <span class="string">"number"</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> event.charCode;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> event.keyCode;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    getClipboardText: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> clipboardData =  (event.clipboardData || <span class="built_in">window</span>.clipboardData);</span><br><span class="line">        <span class="keyword">return</span> clipboardData.getData(<span class="string">"text"</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    getEvent: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> event ? event : <span class="built_in">window</span>.event;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    getRelatedTarget: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (event.relatedTarget)&#123;</span><br><span class="line">            <span class="keyword">return</span> event.relatedTarget;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (event.toElement)&#123;</span><br><span class="line">            <span class="keyword">return</span> event.toElement;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (event.fromElement)&#123;</span><br><span class="line">            <span class="keyword">return</span> event.fromElement;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    getTarget: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> event.target || event.srcElement;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    getWheelDelta: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (event.wheelDelta)&#123;</span><br><span class="line">            <span class="keyword">return</span> (client.engine.opera &amp;&amp; client.engine.opera &lt; <span class="number">9.5</span> ? -event.wheelDelta : event.wheelDelta);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -event.detail * <span class="number">40</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    preventDefault: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (event.preventDefault)&#123;</span><br><span class="line">            event.preventDefault();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            event.returnValue = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    removeHandler: <span class="function"><span class="keyword">function</span>(<span class="params">element, type, handler</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (element.removeEventListener)&#123;</span><br><span class="line">            element.removeEventListener(type, handler, <span class="literal">false</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (element.detachEvent)&#123;</span><br><span class="line">            element.detachEvent(<span class="string">"on"</span> + type, handler);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            element[<span class="string">"on"</span> + type] = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    setClipboardText: <span class="function"><span class="keyword">function</span>(<span class="params">event, value</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (event.clipboardData)&#123;</span><br><span class="line">            event.clipboardData.setData(<span class="string">"text/plain"</span>, value);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">window</span>.clipboardData)&#123;</span><br><span class="line">            <span class="built_in">window</span>.clipboardData.setData(<span class="string">"text"</span>, value);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    stopPropagation: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (event.stopPropagation)&#123;</span><br><span class="line">            event.stopPropagation();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            event.cancelBubble = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.baidu.com/s?wd=js兼容问题处理&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;百度搜索js兼容&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;谈谈JS中常遇到的浏览器兼容问题和解决方法&quot;&gt;&lt;a href=&quot;#谈谈
      
    
    </summary>
    
      <category term="前端" scheme="http://youhanghang.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="js" scheme="http://youhanghang.com/tags/js/"/>
    
      <category term="兼容" scheme="http://youhanghang.com/tags/%E5%85%BC%E5%AE%B9/"/>
    
  </entry>
  
</feed>
